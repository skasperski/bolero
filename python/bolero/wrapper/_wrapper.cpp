/* Generated by Cython 0.29.14 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [],
        "language": "c++",
        "name": "bolero.wrapper._wrapper",
        "sources": [
            "/home/dfki.uni-bremen.de/skasperski/Robotics/rock/backbone/learning/bolero/bolero/wrapper/_wrapper.pyx"
        ]
    },
    "module_name": "bolero.wrapper._wrapper"
}
END: Cython Metadata */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_14"
#define CYTHON_HEX_VERSION 0x001D0EF0
#define CYTHON_FUTURE_DIVISION 0
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #ifndef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #include "longintrepr.h"
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#if PY_VERSION_HEX >= 0x030800A4 && PY_VERSION_HEX < 0x030800B2
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, 0, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
  #define PyObject_Unicode             PyObject_Str
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : (Py_INCREF(func), func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
  #define _USE_MATH_DEFINES
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif


#define __PYX_ERR(f_index, lineno, Ln_error) \
{ \
  __pyx_filename = __pyx_f[f_index]; __pyx_lineno = lineno; __pyx_clineno = __LINE__; goto Ln_error; \
}

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__bolero__wrapper___wrapper
#define __PYX_HAVE_API__bolero__wrapper___wrapper
/* Early includes */
#include <string.h>
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <string>
#include <vector>
#include "lib_manager/LibManager.hpp"
#include "Behavior.h"
#include "LoadableBehavior.h"
#include "BehaviorSearch.h"
#include "Environment.h"
#include "ContextualEnvironment.h"
#include "ParameterizedEnvironment.h"
#include "Optimizer.h"
#include "BLLoader.h"
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"

    /* NumPy API declarations from "numpy/__init__.pxd" */
    
#include "pythread.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "stringsource",
  "bolero/wrapper/_wrapper.pyx",
  "__init__.pxd",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
};
/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;


/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":689
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":690
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":691
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":692
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":696
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":697
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":698
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":699
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":703
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":704
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":713
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":714
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":715
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":717
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":718
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":719
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":721
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":722
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":724
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":725
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":726
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior;
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":728
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":729
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":730
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":732
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "bolero/wrapper/_wrapper.pyx":20
 * 
 * 
 * cdef class CppBLLoader:             # <<<<<<<<<<<<<<
 *     """Behavior learning loader.
 * 
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader {
  PyObject_HEAD
  bolero::bl_loader::BLLoader *thisptr;
};


/* "bolero/wrapper/_wrapper.pyx":171
 * 
 * 
 * cdef class CppOptimizer:             # <<<<<<<<<<<<<<
 *     cdef Optimizer *thisptr
 *     cdef string config_yaml
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer {
  PyObject_HEAD
  bolero::Optimizer *thisptr;
  std::string config_yaml;
};


/* "bolero/wrapper/_wrapper.pyx":252
 *         raise NotImplementedError("Cannot obtain best parameters from C++ optimizer!")
 * 
 * cdef class CppBehaviorSearch:             # <<<<<<<<<<<<<<
 *     cdef BehaviorSearch *thisptr
 *     cdef string config_yaml
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch {
  PyObject_HEAD
  bolero::BehaviorSearch *thisptr;
  std::string config_yaml;
};


/* "bolero/wrapper/_wrapper.pyx":340
 * 
 * 
 * cdef class CppEnvironment:             # <<<<<<<<<<<<<<
 *     cdef Environment *thisptr
 *     cdef string config_yaml
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment {
  PyObject_HEAD
  bolero::Environment *thisptr;
  std::string config_yaml;
};


/* "bolero/wrapper/_wrapper.pyx":457
 * 
 * 
 * cdef class CppContextualEnvironment:             # <<<<<<<<<<<<<<
 *     cdef ContextualEnvironment *thisptr
 *     cdef string config_yaml
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment {
  PyObject_HEAD
  bolero::ContextualEnvironment *thisptr;
  std::string config_yaml;
};


/* "bolero/wrapper/_wrapper.pyx":608
 *         return self.thisptr.get_num_context_dims()
 * 
 * cdef class CppParameterizedEnvironment:             # <<<<<<<<<<<<<<
 *     cdef ParameterizedEnvironment *thisptr
 * 
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment {
  PyObject_HEAD
  bolero::ParameterizedEnvironment *thisptr;
};


/* "bolero/wrapper/_wrapper.pyx":759
 *         return self.thisptr.getNumParameters()
 * 
 * cdef class CppBehavior:             # <<<<<<<<<<<<<<
 *     cdef Behavior *thisptr
 *     cdef string config_yaml
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior {
  PyObject_HEAD
  bolero::Behavior *thisptr;
  std::string config_yaml;
};


/* "bolero/wrapper/_wrapper.pyx":838
 * 
 * 
 * cdef class CppLoadableBehavior(CppBehavior):             # <<<<<<<<<<<<<<
 *     cdef LoadableBehavior *behaviorPtr
 * 
 */
struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior __pyx_base;
  bolero::LoadableBehavior *behaviorPtr;
};


/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return __Pyx_PyObject_GetAttrStr(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#else
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

/* BufferGetAndValidate.proto */
#define __Pyx_GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack)\
    ((obj == Py_None || obj == NULL) ?\
    (__Pyx_ZeroBuffer(buf), 0) :\
    __Pyx__GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack))
static int  __Pyx__GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static void __Pyx_ZeroBuffer(Py_buffer* buf);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static Py_ssize_t __Pyx_minusones[] = { -1, -1, -1, -1, -1, -1, -1, -1 };
static Py_ssize_t __Pyx_zeros[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

/* BufferIndexError.proto */
static void __Pyx_RaiseBufferIndexError(int axis);

#define __Pyx_BufPtrCContig1d(type, buf, i0, s0) ((type)buf + i0)
/* SliceObject.proto */
#define __Pyx_PyObject_DelSlice(obj, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)\
    __Pyx_PyObject_SetSlice(obj, (PyObject*)NULL, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)
static CYTHON_INLINE int __Pyx_PyObject_SetSlice(
        PyObject* obj, PyObject* value, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* SetItemInt.proto */
#define __Pyx_SetItemInt(o, i, v, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_SetItemInt_Fast(o, (Py_ssize_t)i, v, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list assignment index out of range"), -1) :\
               __Pyx_SetItemInt_Generic(o, to_py_func(i), v)))
static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v);
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v,
                                               int is_list, int wraparound, int boundscheck);

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);


/* Module declarations from 'libc.string' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython.version' */

/* Module declarations from 'cpython.exc' */

/* Module declarations from 'cpython.module' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'cpython.tuple' */

/* Module declarations from 'cpython.list' */

/* Module declarations from 'cpython.sequence' */

/* Module declarations from 'cpython.mapping' */

/* Module declarations from 'cpython.iterator' */

/* Module declarations from 'cpython.number' */

/* Module declarations from 'cpython.int' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.bool' */
static PyTypeObject *__pyx_ptype_7cpython_4bool_bool = 0;

/* Module declarations from 'cpython.long' */

/* Module declarations from 'cpython.float' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.complex' */
static PyTypeObject *__pyx_ptype_7cpython_7complex_complex = 0;

/* Module declarations from 'cpython.string' */

/* Module declarations from 'cpython.unicode' */

/* Module declarations from 'cpython.dict' */

/* Module declarations from 'cpython.instance' */

/* Module declarations from 'cpython.function' */

/* Module declarations from 'cpython.method' */

/* Module declarations from 'cpython.weakref' */

/* Module declarations from 'cpython.getargs' */

/* Module declarations from 'cpython.pythread' */

/* Module declarations from 'cpython.pystate' */

/* Module declarations from 'cpython.cobject' */

/* Module declarations from 'cpython.oldbuffer' */

/* Module declarations from 'cpython.set' */

/* Module declarations from 'cpython.bytes' */

/* Module declarations from 'cpython.pycapsule' */

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_generic = 0;
static PyTypeObject *__pyx_ptype_5numpy_number = 0;
static PyTypeObject *__pyx_ptype_5numpy_integer = 0;
static PyTypeObject *__pyx_ptype_5numpy_signedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_unsignedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_inexact = 0;
static PyTypeObject *__pyx_ptype_5numpy_floating = 0;
static PyTypeObject *__pyx_ptype_5numpy_complexfloating = 0;
static PyTypeObject *__pyx_ptype_5numpy_flexible = 0;
static PyTypeObject *__pyx_ptype_5numpy_character = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;

/* Module declarations from 'bolero.wrapper._wrapper' */
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBLLoader = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppOptimizer = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehaviorSearch = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppEnvironment = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppContextualEnvironment = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehavior = 0;
static PyTypeObject *__pyx_ptype_6bolero_7wrapper_8_wrapper_CppLoadableBehavior = 0;
static std::string __pyx_f_6bolero_7wrapper_8_wrapper_get_string(PyObject *); /*proto*/
static std::string __pyx_convert_string_from_py_std__in_string(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_double = { "double", NULL, sizeof(double), { 0 }, 0, 'R', 0, 0 };
#define __Pyx_MODULE_NAME "bolero.wrapper._wrapper"
extern int __pyx_module_is_main_bolero__wrapper___wrapper;
int __pyx_module_is_main_bolero__wrapper___wrapper = 0;

/* Implementation of 'bolero.wrapper._wrapper' */
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_ImportError;
static const char __pyx_k__4[] = "";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_exit[] = "__exit__";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_ndim[] = "ndim";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_enter[] = "__enter__";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_stderr[] = "stderr";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_n_inputs[] = "n_inputs";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_n_outputs[] = "n_outputs";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_utils_log[] = "utils.log";
static const char __pyx_k_HideExtern[] = "HideExtern";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_num_inputs[] = "num_inputs";
static const char __pyx_k_CppBLLoader[] = "CppBLLoader";
static const char __pyx_k_CppBehavior[] = "CppBehavior";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_config_yaml[] = "config_yaml";
static const char __pyx_k_num_outputs[] = "num_outputs";
static const char __pyx_k_CppOptimizer[] = "CppOptimizer";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_CppEnvironment[] = "CppEnvironment";
static const char __pyx_k_get_num_inputs[] = "get_num_inputs";
static const char __pyx_k_get_num_outputs[] = "get_num_outputs";
static const char __pyx_k_meta_parameters[] = "meta_parameters";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_CppBehaviorSearch[] = "CppBehaviorSearch";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_get_num_parameters[] = "get_num_parameters";
static const char __pyx_k_CppLoadableBehavior[] = "CppLoadableBehavior";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_get_num_context_dims[] = "get_num_context_dims";
static const char __pyx_k_CppContextualEnvironment[] = "CppContextualEnvironment";
static const char __pyx_k_CppParameterizedEnvironment[] = "CppParameterizedEnvironment";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_Behavior_search_does_not_impleme[] = "Behavior search does not implement getBestBehavior()";
static const char __pyx_k_Cannot_obtain_best_parameters_fr[] = "Cannot obtain best parameters from C++ optimizer!";
static const char __pyx_k_Collected_more_than_1000_feedbac[] = "Collected more than 1000 feedbacks, fix the wrapper code";
static const char __pyx_k_Meta_parameters_are_not_availabl[] = "Meta parameters are not available in C++ behavior!";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static PyObject *__pyx_kp_s_Behavior_search_does_not_impleme;
static PyObject *__pyx_kp_s_Cannot_obtain_best_parameters_fr;
static PyObject *__pyx_kp_s_Collected_more_than_1000_feedbac;
static PyObject *__pyx_n_s_CppBLLoader;
static PyObject *__pyx_n_s_CppBehavior;
static PyObject *__pyx_n_s_CppBehaviorSearch;
static PyObject *__pyx_n_s_CppContextualEnvironment;
static PyObject *__pyx_n_s_CppEnvironment;
static PyObject *__pyx_n_s_CppLoadableBehavior;
static PyObject *__pyx_n_s_CppOptimizer;
static PyObject *__pyx_n_s_CppParameterizedEnvironment;
static PyObject *__pyx_n_s_HideExtern;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_s_Meta_parameters_are_not_availabl;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_b__4;
static PyObject *__pyx_kp_s__4;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_config_yaml;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_enter;
static PyObject *__pyx_n_s_exit;
static PyObject *__pyx_n_s_get_num_context_dims;
static PyObject *__pyx_n_s_get_num_inputs;
static PyObject *__pyx_n_s_get_num_outputs;
static PyObject *__pyx_n_s_get_num_parameters;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_keys;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_meta_parameters;
static PyObject *__pyx_n_s_n_inputs;
static PyObject *__pyx_n_s_n_outputs;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_ndim;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_num_inputs;
static PyObject *__pyx_n_s_num_outputs;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_s_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_s_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_s_stderr;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_kp_s_utf_8;
static PyObject *__pyx_n_s_utils_log;
static int __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self); /* proto */
static void __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_2__dealloc__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_4load_library(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_lib_path); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_6load_config_file(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_config_file); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_8acquire_optimizer(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_10acquire_behavior_search(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_12acquire_environment(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_14acquire_behavior(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_16acquire_contextual_environment(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_18acquire_parameterized_environment(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_20release_library(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_config_yaml); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_dimension); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_6get_next_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_8get_best_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_p); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_10set_evaluation_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_rewards); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_12is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_14get_best_parameters(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_config_yaml); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_num_inputs, PyObject *__pyx_v_num_outputs); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_6get_next_behavior(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_8get_best_behavior(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_10set_evaluation_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_feedbacks); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_12write_results(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_result_path); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_14get_behavior_from_results(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_result_path); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, PyObject *__pyx_v_config_yaml); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_6reset(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_8get_num_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_10get_num_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_12get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_14set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_16step_action(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_18is_evaluation_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_20get_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_22is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_24is_contextual(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_26__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_28__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_config_yaml); /* proto */
static void __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_4__dealloc__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_6init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_8reset(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_10get_num_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_12get_num_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_14get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_16set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_18step_action(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_20is_evaluation_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_22get_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_24is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_26is_contextual(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_28request_context(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_context); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_30get_num_context_dims(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_32__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_34__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static void __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_2__dealloc__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_4initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_config_yaml); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_6init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_8reset(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_10get_num_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_12get_num_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_14get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_16set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_18step_action(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_20is_evaluation_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_22get_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_feedback); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_24is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_26get_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_paramters); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_28set_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_parameters); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_30get_num_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_32__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_34__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_config_yaml); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_n_inputs, PyObject *__pyx_v_n_outputs); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_6set_meta_parameters(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_keys, CYTHON_UNUSED PyObject *__pyx_v_meta_parameters); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_8set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_10get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_12step(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_14can_step(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_2initialize(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, PyObject *__pyx_v_initialConfigPath); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_4configure(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, PyObject *__pyx_v_configPath); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_6configure_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, PyObject *__pyx_v_yaml_str); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBLLoader(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppOptimizer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehaviorSearch(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppEnvironment(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppContextualEnvironment(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehavior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppLoadableBehavior(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyString_Type_encode = {0, &__pyx_n_s_encode, 0, 0, 0};
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_1000;
static PyObject *__pyx_tuple_;
static PyObject *__pyx_slice__5;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__6;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__12;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__14;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
/* Late includes */

/* "bolero/wrapper/_wrapper.pyx":11
 * 
 * 
 * cdef string get_string(str s):             # <<<<<<<<<<<<<<
 *     cdef string result
 *     if version.PY_MAJOR_VERSION >= 3:
 */

static std::string __pyx_f_6bolero_7wrapper_8_wrapper_get_string(PyObject *__pyx_v_s) {
  std::string __pyx_v_result;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  std::string __pyx_t_3;
  __Pyx_RefNannySetupContext("get_string", 0);

  /* "bolero/wrapper/_wrapper.pyx":13
 * cdef string get_string(str s):
 *     cdef string result
 *     if version.PY_MAJOR_VERSION >= 3:             # <<<<<<<<<<<<<<
 *         result = s.encode("utf-8")
 *     else:
 */
  __pyx_t_1 = ((PY_MAJOR_VERSION >= 3) != 0);
  if (__pyx_t_1) {

    /* "bolero/wrapper/_wrapper.pyx":14
 *     cdef string result
 *     if version.PY_MAJOR_VERSION >= 3:
 *         result = s.encode("utf-8")             # <<<<<<<<<<<<<<
 *     else:
 *         result = s
 */
    __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyString_Type_encode, __pyx_v_s, __pyx_kp_s_utf_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_convert_string_from_py_std__in_string(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_result = __pyx_t_3;

    /* "bolero/wrapper/_wrapper.pyx":13
 * cdef string get_string(str s):
 *     cdef string result
 *     if version.PY_MAJOR_VERSION >= 3:             # <<<<<<<<<<<<<<
 *         result = s.encode("utf-8")
 *     else:
 */
    goto __pyx_L3;
  }

  /* "bolero/wrapper/_wrapper.pyx":16
 *         result = s.encode("utf-8")
 *     else:
 *         result = s             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
  /*else*/ {
    __pyx_t_3 = __pyx_convert_string_from_py_std__in_string(__pyx_v_s); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L1_error)
    __pyx_v_result = __pyx_t_3;
  }
  __pyx_L3:;

  /* "bolero/wrapper/_wrapper.pyx":17
 *     else:
 *         result = s
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":11
 * 
 * 
 * cdef string get_string(str s):             # <<<<<<<<<<<<<<
 *     cdef string result
 *     if version.PY_MAJOR_VERSION >= 3:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("bolero.wrapper._wrapper.get_string", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":27
 *     cdef BLLoader *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             self.thisptr = new BLLoader()
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bolero::bl_loader::BLLoader *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":28
 * 
 *     def __cinit__(self):
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr = new BLLoader()
 * 
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 28, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 28, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 28, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":29
 *     def __cinit__(self):
 *         with HideExtern("stderr"):
 *             self.thisptr = new BLLoader()             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
          try {
            __pyx_t_9 = new bolero::bl_loader::BLLoader();
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 29, __pyx_L7_error)
          }
          __pyx_v_self->thisptr = __pyx_t_9;

          /* "bolero/wrapper/_wrapper.pyx":28
 * 
 *     def __cinit__(self):
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr = new BLLoader()
 * 
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 28, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 28, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 28, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(1, 28, __pyx_L9_except_error)
          __pyx_t_12 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 28, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 28, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":27
 *     cdef BLLoader *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             self.thisptr = new BLLoader()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":31
 *             self.thisptr = new BLLoader()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             del self.thisptr
 */

/* Python wrapper */
static void __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_2__dealloc__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_2__dealloc__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bolero/wrapper/_wrapper.pyx":32
 * 
 *     def __dealloc__(self):
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 32, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 32, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 32, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        (void)__pyx_t_6; (void)__pyx_t_7; (void)__pyx_t_8; /* mark used */
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":33
 *     def __dealloc__(self):
 *         with HideExtern("stderr"):
 *             del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def load_library(self, lib_path):
 */
          delete __pyx_v_self->thisptr;

          /* "bolero/wrapper/_wrapper.pyx":32
 * 
 *     def __dealloc__(self):
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             del self.thisptr
 * 
 */
        }
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 32, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L13;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L13:;
  }

  /* "bolero/wrapper/_wrapper.pyx":31
 *             self.thisptr = new BLLoader()
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             del self.thisptr
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_WriteUnraisable("bolero.wrapper._wrapper.CppBLLoader.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
}

/* "bolero/wrapper/_wrapper.pyx":35
 *             del self.thisptr
 * 
 *     def load_library(self, lib_path):             # <<<<<<<<<<<<<<
 *         """Load library from a file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_5load_library(PyObject *__pyx_v_self, PyObject *__pyx_v_lib_path); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_4load_library[] = "Load library from a file.\n\n        Parameters\n        ----------\n        lib_path : str\n            Path to the library file for the libManager.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_5load_library(PyObject *__pyx_v_self, PyObject *__pyx_v_lib_path) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_library (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_4load_library(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_lib_path));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_4load_library(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_lib_path) {
  std::string __pyx_v_library_file;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("load_library", 0);

  /* "bolero/wrapper/_wrapper.pyx":43
 *             Path to the library file for the libManager.
 *         """
 *         cdef string library_file = get_string(lib_path)             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             self.thisptr.loadLibrary(library_file, NULL)
 */
  if (!(likely(PyString_CheckExact(__pyx_v_lib_path))||((__pyx_v_lib_path) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_lib_path)->tp_name), 0))) __PYX_ERR(1, 43, __pyx_L1_error)
  __pyx_v_library_file = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_lib_path));

  /* "bolero/wrapper/_wrapper.pyx":44
 *         """
 *         cdef string library_file = get_string(lib_path)
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr.loadLibrary(library_file, NULL)
 * 
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 44, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 44, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":45
 *         cdef string library_file = get_string(lib_path)
 *         with HideExtern("stderr"):
 *             self.thisptr.loadLibrary(library_file, NULL)             # <<<<<<<<<<<<<<
 * 
 *     def load_config_file(self, config_file):
 */
          try {
            __pyx_v_self->thisptr->loadLibrary(__pyx_v_library_file, NULL);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 45, __pyx_L7_error)
          }

          /* "bolero/wrapper/_wrapper.pyx":44
 *         """
 *         cdef string library_file = get_string(lib_path)
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr.loadLibrary(library_file, NULL)
 * 
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.load_library", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 44, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 44, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 44, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (__pyx_t_10 < 0) __PYX_ERR(1, 44, __pyx_L9_except_error)
          __pyx_t_11 = ((!(__pyx_t_10 != 0)) != 0);
          if (__pyx_t_11) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 44, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 44, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":35
 *             del self.thisptr
 * 
 *     def load_library(self, lib_path):             # <<<<<<<<<<<<<<
 *         """Load library from a file.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.load_library", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":47
 *             self.thisptr.loadLibrary(library_file, NULL)
 * 
 *     def load_config_file(self, config_file):             # <<<<<<<<<<<<<<
 *         """Load list of libraries for the libManager from a file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_7load_config_file(PyObject *__pyx_v_self, PyObject *__pyx_v_config_file); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_6load_config_file[] = "Load list of libraries for the libManager from a file.\n\n        Parameters\n        ----------\n        config_file : str\n            Path to the configuration file for the libManager. The file\n            should contain a list of shared libraries that can be loaded\n            by the libManager.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_7load_config_file(PyObject *__pyx_v_self, PyObject *__pyx_v_config_file) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_config_file (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_6load_config_file(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_config_file));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_6load_config_file(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_config_file) {
  std::string __pyx_v_config_file_str;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("load_config_file", 0);

  /* "bolero/wrapper/_wrapper.pyx":57
 *             by the libManager.
 *         """
 *         cdef string config_file_str = get_string(config_file)             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             self.thisptr.loadConfigFile(config_file_str)
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_file))||((__pyx_v_config_file) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_file)->tp_name), 0))) __PYX_ERR(1, 57, __pyx_L1_error)
  __pyx_v_config_file_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_file));

  /* "bolero/wrapper/_wrapper.pyx":58
 *         """
 *         cdef string config_file_str = get_string(config_file)
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr.loadConfigFile(config_file_str)
 * 
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 58, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 58, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 58, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 58, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 58, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":59
 *         cdef string config_file_str = get_string(config_file)
 *         with HideExtern("stderr"):
 *             self.thisptr.loadConfigFile(config_file_str)             # <<<<<<<<<<<<<<
 * 
 *     def acquire_optimizer(self, name):
 */
          try {
            __pyx_v_self->thisptr->loadConfigFile(__pyx_v_config_file_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 59, __pyx_L7_error)
          }

          /* "bolero/wrapper/_wrapper.pyx":58
 *         """
 *         cdef string config_file_str = get_string(config_file)
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr.loadConfigFile(config_file_str)
 * 
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.load_config_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 58, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 58, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 58, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (__pyx_t_10 < 0) __PYX_ERR(1, 58, __pyx_L9_except_error)
          __pyx_t_11 = ((!(__pyx_t_10 != 0)) != 0);
          if (__pyx_t_11) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 58, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 58, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":47
 *             self.thisptr.loadLibrary(library_file, NULL)
 * 
 *     def load_config_file(self, config_file):             # <<<<<<<<<<<<<<
 *         """Load list of libraries for the libManager from a file.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.load_config_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":61
 *             self.thisptr.loadConfigFile(config_file_str)
 * 
 *     def acquire_optimizer(self, name):             # <<<<<<<<<<<<<<
 *         """Get an optimizer.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_9acquire_optimizer(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_8acquire_optimizer[] = "Get an optimizer.\n\n        Parameters\n        ----------\n        name : str\n            Name of the corresponding shared library.\n\n        Returns\n        -------\n        optimizer : CppOptimizer\n            Optimizer instance.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_9acquire_optimizer(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire_optimizer (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_8acquire_optimizer(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_8acquire_optimizer(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  std::string __pyx_v_name_str;
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_optimizer = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bolero::Optimizer *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("acquire_optimizer", 0);

  /* "bolero/wrapper/_wrapper.pyx":74
 *             Optimizer instance.
 *         """
 *         cdef string name_str = get_string(name)             # <<<<<<<<<<<<<<
 *         optimizer = CppOptimizer()
 *         with HideExtern("stderr"):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(1, 74, __pyx_L1_error)
  __pyx_v_name_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_name));

  /* "bolero/wrapper/_wrapper.pyx":75
 *         """
 *         cdef string name_str = get_string(name)
 *         optimizer = CppOptimizer()             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             optimizer.thisptr = self.thisptr.acquireOptimizer(name_str)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppOptimizer)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_optimizer = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":76
 *         cdef string name_str = get_string(name)
 *         optimizer = CppOptimizer()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             optimizer.thisptr = self.thisptr.acquireOptimizer(name_str)
 *         return optimizer
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 76, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 76, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 76, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":77
 *         optimizer = CppOptimizer()
 *         with HideExtern("stderr"):
 *             optimizer.thisptr = self.thisptr.acquireOptimizer(name_str)             # <<<<<<<<<<<<<<
 *         return optimizer
 * 
 */
          try {
            __pyx_t_9 = __pyx_v_self->thisptr->acquireOptimizer(__pyx_v_name_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 77, __pyx_L7_error)
          }
          __pyx_v_optimizer->thisptr = __pyx_t_9;

          /* "bolero/wrapper/_wrapper.pyx":76
 *         cdef string name_str = get_string(name)
 *         optimizer = CppOptimizer()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             optimizer.thisptr = self.thisptr.acquireOptimizer(name_str)
 *         return optimizer
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_optimizer", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 76, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 76, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 76, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(1, 76, __pyx_L9_except_error)
          __pyx_t_12 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 76, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 76, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":78
 *         with HideExtern("stderr"):
 *             optimizer.thisptr = self.thisptr.acquireOptimizer(name_str)
 *         return optimizer             # <<<<<<<<<<<<<<
 * 
 *     def acquire_behavior_search(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_optimizer));
  __pyx_r = ((PyObject *)__pyx_v_optimizer);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":61
 *             self.thisptr.loadConfigFile(config_file_str)
 * 
 *     def acquire_optimizer(self, name):             # <<<<<<<<<<<<<<
 *         """Get an optimizer.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_optimizer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_optimizer);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":80
 *         return optimizer
 * 
 *     def acquire_behavior_search(self, name):             # <<<<<<<<<<<<<<
 *         """Get a behavior search.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_11acquire_behavior_search(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_10acquire_behavior_search[] = "Get a behavior search.\n\n        Parameters\n        ----------\n        name : str\n            Name of the corresponding shared library.\n\n        Returns\n        -------\n        optimizer : CppBehaviorSearch\n            Behavior search instance.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_11acquire_behavior_search(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire_behavior_search (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_10acquire_behavior_search(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_10acquire_behavior_search(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  std::string __pyx_v_name_str;
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_behavior_search = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bolero::BehaviorSearch *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("acquire_behavior_search", 0);

  /* "bolero/wrapper/_wrapper.pyx":93
 *             Behavior search instance.
 *         """
 *         cdef string name_str = get_string(name)             # <<<<<<<<<<<<<<
 *         behavior_search = CppBehaviorSearch()
 *         with HideExtern("stderr"):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(1, 93, __pyx_L1_error)
  __pyx_v_name_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_name));

  /* "bolero/wrapper/_wrapper.pyx":94
 *         """
 *         cdef string name_str = get_string(name)
 *         behavior_search = CppBehaviorSearch()             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             behavior_search.thisptr = self.thisptr.acquireBehaviorSearch(name_str)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehaviorSearch)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_behavior_search = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":95
 *         cdef string name_str = get_string(name)
 *         behavior_search = CppBehaviorSearch()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             behavior_search.thisptr = self.thisptr.acquireBehaviorSearch(name_str)
 *         return behavior_search
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 95, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 95, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 95, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 95, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 95, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":96
 *         behavior_search = CppBehaviorSearch()
 *         with HideExtern("stderr"):
 *             behavior_search.thisptr = self.thisptr.acquireBehaviorSearch(name_str)             # <<<<<<<<<<<<<<
 *         return behavior_search
 * 
 */
          try {
            __pyx_t_9 = __pyx_v_self->thisptr->acquireBehaviorSearch(__pyx_v_name_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 96, __pyx_L7_error)
          }
          __pyx_v_behavior_search->thisptr = __pyx_t_9;

          /* "bolero/wrapper/_wrapper.pyx":95
 *         cdef string name_str = get_string(name)
 *         behavior_search = CppBehaviorSearch()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             behavior_search.thisptr = self.thisptr.acquireBehaviorSearch(name_str)
 *         return behavior_search
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_behavior_search", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 95, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 95, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 95, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(1, 95, __pyx_L9_except_error)
          __pyx_t_12 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 95, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 95, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":97
 *         with HideExtern("stderr"):
 *             behavior_search.thisptr = self.thisptr.acquireBehaviorSearch(name_str)
 *         return behavior_search             # <<<<<<<<<<<<<<
 * 
 *     def acquire_environment(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_behavior_search));
  __pyx_r = ((PyObject *)__pyx_v_behavior_search);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":80
 *         return optimizer
 * 
 *     def acquire_behavior_search(self, name):             # <<<<<<<<<<<<<<
 *         """Get a behavior search.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_behavior_search", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_behavior_search);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":99
 *         return behavior_search
 * 
 *     def acquire_environment(self, name):             # <<<<<<<<<<<<<<
 *         """Get an environment.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_13acquire_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_12acquire_environment[] = "Get an environment.\n\n        Parameters\n        ----------\n        name : str\n            Name of the corresponding shared library.\n\n        Returns\n        -------\n        optimizer : CppEnvironment\n            Environment instance.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_13acquire_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire_environment (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_12acquire_environment(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_12acquire_environment(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  std::string __pyx_v_name_str;
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_environment = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bolero::Environment *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("acquire_environment", 0);

  /* "bolero/wrapper/_wrapper.pyx":112
 *             Environment instance.
 *         """
 *         cdef string name_str = get_string(name)             # <<<<<<<<<<<<<<
 *         environment = CppEnvironment()
 *         with HideExtern("stderr"):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(1, 112, __pyx_L1_error)
  __pyx_v_name_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_name));

  /* "bolero/wrapper/_wrapper.pyx":113
 *         """
 *         cdef string name_str = get_string(name)
 *         environment = CppEnvironment()             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireEnvironment(name_str)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppEnvironment)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_environment = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":114
 *         cdef string name_str = get_string(name)
 *         environment = CppEnvironment()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             environment.thisptr = self.thisptr.acquireEnvironment(name_str)
 *         return environment
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 114, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 114, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":115
 *         environment = CppEnvironment()
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireEnvironment(name_str)             # <<<<<<<<<<<<<<
 *         return environment
 * 
 */
          try {
            __pyx_t_9 = __pyx_v_self->thisptr->acquireEnvironment(__pyx_v_name_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 115, __pyx_L7_error)
          }
          __pyx_v_environment->thisptr = __pyx_t_9;

          /* "bolero/wrapper/_wrapper.pyx":114
 *         cdef string name_str = get_string(name)
 *         environment = CppEnvironment()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             environment.thisptr = self.thisptr.acquireEnvironment(name_str)
 *         return environment
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 114, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 114, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 114, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(1, 114, __pyx_L9_except_error)
          __pyx_t_12 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 114, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 114, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":116
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireEnvironment(name_str)
 *         return environment             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_environment));
  __pyx_r = ((PyObject *)__pyx_v_environment);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":99
 *         return behavior_search
 * 
 *     def acquire_environment(self, name):             # <<<<<<<<<<<<<<
 *         """Get an environment.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_environment);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":119
 * 
 * 
 *     def acquire_behavior(self, name):             # <<<<<<<<<<<<<<
 *         """Get a behavior.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_15acquire_behavior(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_14acquire_behavior[] = "Get a behavior.\n\n        Parameters\n        ----------\n        name : str\n            Name of the corresponding shared library.\n\n        Returns\n        -------\n\n        behavior : CppLoadableBehavior\n            Behavior instance.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_15acquire_behavior(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire_behavior (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_14acquire_behavior(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_14acquire_behavior(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_behavior = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  std::string __pyx_t_9;
  bolero::LoadableBehavior *__pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_t_13;
  __Pyx_RefNannySetupContext("acquire_behavior", 0);

  /* "bolero/wrapper/_wrapper.pyx":133
 *             Behavior instance.
 *         """
 *         behavior = CppLoadableBehavior()             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             behavior.behaviorPtr = self.thisptr.acquireBehavior(name)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppLoadableBehavior)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_behavior = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":134
 *         """
 *         behavior = CppLoadableBehavior()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             behavior.behaviorPtr = self.thisptr.acquireBehavior(name)
 *             behavior.thisptr = behavior.behaviorPtr
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 134, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 134, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":135
 *         behavior = CppLoadableBehavior()
 *         with HideExtern("stderr"):
 *             behavior.behaviorPtr = self.thisptr.acquireBehavior(name)             # <<<<<<<<<<<<<<
 *             behavior.thisptr = behavior.behaviorPtr
 * 
 */
          __pyx_t_9 = __pyx_convert_string_from_py_std__in_string(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 135, __pyx_L7_error)
          try {
            __pyx_t_10 = __pyx_v_self->thisptr->acquireBehavior(__pyx_t_9);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 135, __pyx_L7_error)
          }
          __pyx_v_behavior->behaviorPtr = __pyx_t_10;

          /* "bolero/wrapper/_wrapper.pyx":136
 *         with HideExtern("stderr"):
 *             behavior.behaviorPtr = self.thisptr.acquireBehavior(name)
 *             behavior.thisptr = behavior.behaviorPtr             # <<<<<<<<<<<<<<
 * 
 *         return behavior
 */
          __pyx_t_10 = __pyx_v_behavior->behaviorPtr;
          __pyx_v_behavior->__pyx_base.thisptr = __pyx_t_10;

          /* "bolero/wrapper/_wrapper.pyx":134
 *         """
 *         behavior = CppLoadableBehavior()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             behavior.behaviorPtr = self.thisptr.acquireBehavior(name)
 *             behavior.thisptr = behavior.behaviorPtr
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_behavior", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 134, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 134, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_11 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_11)) __PYX_ERR(1, 134, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (__pyx_t_12 < 0) __PYX_ERR(1, 134, __pyx_L9_except_error)
          __pyx_t_13 = ((!(__pyx_t_12 != 0)) != 0);
          if (__pyx_t_13) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 134, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 134, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":138
 *             behavior.thisptr = behavior.behaviorPtr
 * 
 *         return behavior             # <<<<<<<<<<<<<<
 * 
 *     def acquire_contextual_environment(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_behavior));
  __pyx_r = ((PyObject *)__pyx_v_behavior);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":119
 * 
 * 
 *     def acquire_behavior(self, name):             # <<<<<<<<<<<<<<
 *         """Get a behavior.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_behavior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_behavior);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":140
 *         return behavior
 * 
 *     def acquire_contextual_environment(self, name):             # <<<<<<<<<<<<<<
 *         """Get an contextual environment.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_17acquire_contextual_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_16acquire_contextual_environment[] = "Get an contextual environment.\n\n        name : CppContextualEnvironment\n            ContextualEnvironment instance.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_17acquire_contextual_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire_contextual_environment (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_16acquire_contextual_environment(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_16acquire_contextual_environment(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  std::string __pyx_v_name_str;
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_environment = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bolero::ContextualEnvironment *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("acquire_contextual_environment", 0);

  /* "bolero/wrapper/_wrapper.pyx":146
 *             ContextualEnvironment instance.
 *         """
 *         cdef string name_str = get_string(name)             # <<<<<<<<<<<<<<
 *         environment = CppContextualEnvironment()
 *         with HideExtern("stderr"):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(1, 146, __pyx_L1_error)
  __pyx_v_name_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_name));

  /* "bolero/wrapper/_wrapper.pyx":147
 *         """
 *         cdef string name_str = get_string(name)
 *         environment = CppContextualEnvironment()             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireContextualEnvironment(name_str)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppContextualEnvironment)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_environment = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":148
 *         cdef string name_str = get_string(name)
 *         environment = CppContextualEnvironment()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             environment.thisptr = self.thisptr.acquireContextualEnvironment(name_str)
 *         return environment
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 148, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 148, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":149
 *         environment = CppContextualEnvironment()
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireContextualEnvironment(name_str)             # <<<<<<<<<<<<<<
 *         return environment
 * 
 */
          try {
            __pyx_t_9 = __pyx_v_self->thisptr->acquireContextualEnvironment(__pyx_v_name_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 149, __pyx_L7_error)
          }
          __pyx_v_environment->thisptr = __pyx_t_9;

          /* "bolero/wrapper/_wrapper.pyx":148
 *         cdef string name_str = get_string(name)
 *         environment = CppContextualEnvironment()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             environment.thisptr = self.thisptr.acquireContextualEnvironment(name_str)
 *         return environment
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_contextual_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 148, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 148, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 148, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(1, 148, __pyx_L9_except_error)
          __pyx_t_12 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 148, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":150
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireContextualEnvironment(name_str)
 *         return environment             # <<<<<<<<<<<<<<
 * 
 *     def acquire_parameterized_environment(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_environment));
  __pyx_r = ((PyObject *)__pyx_v_environment);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":140
 *         return behavior
 * 
 *     def acquire_contextual_environment(self, name):             # <<<<<<<<<<<<<<
 *         """Get an contextual environment.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_contextual_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_environment);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":152
 *         return environment
 * 
 *     def acquire_parameterized_environment(self, name):             # <<<<<<<<<<<<<<
 *         """Get an parameterized environment.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_19acquire_parameterized_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_18acquire_parameterized_environment[] = "Get an parameterized environment.\n\n        name : CppParameterizedEnvironment\n            ParameterizedEnvironment instance.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_19acquire_parameterized_environment(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("acquire_parameterized_environment (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_18acquire_parameterized_environment(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_18acquire_parameterized_environment(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  std::string __pyx_v_name_str;
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_environment = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  bolero::ParameterizedEnvironment *__pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_t_12;
  __Pyx_RefNannySetupContext("acquire_parameterized_environment", 0);

  /* "bolero/wrapper/_wrapper.pyx":158
 *             ParameterizedEnvironment instance.
 *         """
 *         cdef string name_str = get_string(name)             # <<<<<<<<<<<<<<
 *         environment = CppParameterizedEnvironment()
 *         with HideExtern("stderr"):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(1, 158, __pyx_L1_error)
  __pyx_v_name_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_name));

  /* "bolero/wrapper/_wrapper.pyx":159
 *         """
 *         cdef string name_str = get_string(name)
 *         environment = CppParameterizedEnvironment()             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireParameterizedEnvironment(name_str)
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_environment = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":160
 *         cdef string name_str = get_string(name)
 *         environment = CppParameterizedEnvironment()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             environment.thisptr = self.thisptr.acquireParameterizedEnvironment(name_str)
 *         return environment
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 160, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 160, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":161
 *         environment = CppParameterizedEnvironment()
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireParameterizedEnvironment(name_str)             # <<<<<<<<<<<<<<
 *         return environment
 * 
 */
          try {
            __pyx_t_9 = __pyx_v_self->thisptr->acquireParameterizedEnvironment(__pyx_v_name_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 161, __pyx_L7_error)
          }
          __pyx_v_environment->thisptr = __pyx_t_9;

          /* "bolero/wrapper/_wrapper.pyx":160
 *         cdef string name_str = get_string(name)
 *         environment = CppParameterizedEnvironment()
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             environment.thisptr = self.thisptr.acquireParameterizedEnvironment(name_str)
 *         return environment
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_parameterized_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 160, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 160, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(1, 160, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (__pyx_t_11 < 0) __PYX_ERR(1, 160, __pyx_L9_except_error)
          __pyx_t_12 = ((!(__pyx_t_11 != 0)) != 0);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 160, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 160, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":162
 *         with HideExtern("stderr"):
 *             environment.thisptr = self.thisptr.acquireParameterizedEnvironment(name_str)
 *         return environment             # <<<<<<<<<<<<<<
 * 
 *     def release_library(self, name):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_environment));
  __pyx_r = ((PyObject *)__pyx_v_environment);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":152
 *         return environment
 * 
 *     def acquire_parameterized_environment(self, name):             # <<<<<<<<<<<<<<
 *         """Get an parameterized environment.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.acquire_parameterized_environment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_environment);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":164
 *         return environment
 * 
 *     def release_library(self, name):             # <<<<<<<<<<<<<<
 *         """Release a C++ library."""
 *         cdef string name_str = get_string(name)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_21release_library(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_20release_library[] = "Release a C++ library.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_21release_library(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("release_library (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_20release_library(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_20release_library(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, PyObject *__pyx_v_name) {
  std::string __pyx_v_name_str;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  __Pyx_RefNannySetupContext("release_library", 0);

  /* "bolero/wrapper/_wrapper.pyx":166
 *     def release_library(self, name):
 *         """Release a C++ library."""
 *         cdef string name_str = get_string(name)             # <<<<<<<<<<<<<<
 *         with HideExtern("stderr"):
 *             self.thisptr.releaseLibrary(name_str)
 */
  if (!(likely(PyString_CheckExact(__pyx_v_name))||((__pyx_v_name) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_name)->tp_name), 0))) __PYX_ERR(1, 166, __pyx_L1_error)
  __pyx_v_name_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_name));

  /* "bolero/wrapper/_wrapper.pyx":167
 *         """Release a C++ library."""
 *         cdef string name_str = get_string(name)
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr.releaseLibrary(name_str)
 * 
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_n_s_stderr) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_n_s_stderr);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_exit); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_LookupSpecial(__pyx_t_1, __pyx_n_s_enter); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 167, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 167, __pyx_L3_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        /*try:*/ {

          /* "bolero/wrapper/_wrapper.pyx":168
 *         cdef string name_str = get_string(name)
 *         with HideExtern("stderr"):
 *             self.thisptr.releaseLibrary(name_str)             # <<<<<<<<<<<<<<
 * 
 * 
 */
          try {
            __pyx_v_self->thisptr->releaseLibrary(__pyx_v_name_str);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(1, 168, __pyx_L7_error)
          }

          /* "bolero/wrapper/_wrapper.pyx":167
 *         """Release a C++ library."""
 *         cdef string name_str = get_string(name)
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr.releaseLibrary(name_str)
 * 
 */
        }
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L12_try_end;
        __pyx_L7_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.release_library", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(1, 167, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_5 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 167, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(1, 167, __pyx_L9_except_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (__pyx_t_10 < 0) __PYX_ERR(1, 167, __pyx_L9_except_error)
          __pyx_t_11 = ((!(__pyx_t_10 != 0)) != 0);
          if (__pyx_t_11) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(1, 167, __pyx_L9_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L8_exception_handled;
        }
        __pyx_L9_except_error:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        goto __pyx_L1_error;
        __pyx_L8_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_6);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        __pyx_L12_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_4) {
          __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple_, NULL);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_8)) __PYX_ERR(1, 167, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        goto __pyx_L6;
      }
      __pyx_L6:;
    }
    goto __pyx_L16;
    __pyx_L3_error:;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    goto __pyx_L1_error;
    __pyx_L16:;
  }

  /* "bolero/wrapper/_wrapper.pyx":164
 *         return environment
 * 
 *     def release_library(self, name):             # <<<<<<<<<<<<<<
 *         """Release a C++ library."""
 *         cdef string name_str = get_string(name)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.release_library", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_23__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_23__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_22__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_25__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_25__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_24__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBLLoader_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBLLoader.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":175
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":176
 * 
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer             # <<<<<<<<<<<<<<
 *         self.config_yaml = ""
 * 
 */
  __pyx_v_self->thisptr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":177
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""             # <<<<<<<<<<<<<<
 * 
 *     def initialize_yaml(self, config_yaml):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 177, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_t_1;

  /* "bolero/wrapper/_wrapper.pyx":175
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":179
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_2initialize_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self), ((PyObject *)__pyx_v_config_yaml));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":180
 * 
 *     def initialize_yaml(self, config_yaml):
 *         self.config_yaml = get_string(config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def init(self, dimension):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_yaml))||((__pyx_v_config_yaml) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_yaml)->tp_name), 0))) __PYX_ERR(1, 180, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_yaml));

  /* "bolero/wrapper/_wrapper.pyx":179
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.initialize_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":182
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self, dimension):             # <<<<<<<<<<<<<<
 *         """Initialize optimizer.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_5init(PyObject *__pyx_v_self, PyObject *__pyx_v_dimension); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_4init[] = "Initialize optimizer.\n\n        Parameters\n        ----------\n        dimension : int\n            dimension of the parameter vector\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_5init(PyObject *__pyx_v_self, PyObject *__pyx_v_dimension) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_4init(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self), ((PyObject *)__pyx_v_dimension));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_dimension) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("init", 0);

  /* "bolero/wrapper/_wrapper.pyx":190
 *             dimension of the parameter vector
 *         """
 *         self.thisptr.init(dimension, self.config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def get_next_parameters(self, p):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_dimension); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 190, __pyx_L1_error)
  try {
    __pyx_v_self->thisptr->init(__pyx_t_1, __pyx_v_self->config_yaml);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 190, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":182
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self, dimension):             # <<<<<<<<<<<<<<
 *         """Initialize optimizer.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":192
 *         self.thisptr.init(dimension, self.config_yaml)
 * 
 *     def get_next_parameters(self, p):             # <<<<<<<<<<<<<<
 *         """Get next individual/parameter vector for evaluation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_7get_next_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_6get_next_parameters[] = "Get next individual/parameter vector for evaluation.\n\n        Parameters\n        ----------\n        p : array_like, shape (num_p,)\n            parameter vector, will be modified\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_7get_next_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_next_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_6get_next_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self), ((PyObject *)__pyx_v_p));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_6get_next_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_p) {
  PyArrayObject *__pyx_v_params_array = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_params_array;
  __Pyx_Buffer __pyx_pybuffer_params_array;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("get_next_parameters", 0);
  __pyx_pybuffer_params_array.pybuffer.buf = NULL;
  __pyx_pybuffer_params_array.refcount = 0;
  __pyx_pybuffernd_params_array.data = NULL;
  __pyx_pybuffernd_params_array.rcbuffer = &__pyx_pybuffer_params_array;

  /* "bolero/wrapper/_wrapper.pyx":200
 *             parameter vector, will be modified
 *         """
 *         assert(p.ndim == 1)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *         self.thisptr.getNextParameters(&params_array[0], params_array.shape[0])
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(1, 200, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(1, 200, __pyx_L1_error)
    }
  }
  #endif

  /* "bolero/wrapper/_wrapper.pyx":201
 *         """
 *         assert(p.ndim == 1)
 *         cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)             # <<<<<<<<<<<<<<
 *         self.thisptr.getNextParameters(&params_array[0], params_array.shape[0])
 *         p[:] = params_array
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PySequence_Tuple(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_params_array.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_params_array = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_params_array.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 201, __pyx_L1_error)
    } else {__pyx_pybuffernd_params_array.diminfo[0].strides = __pyx_pybuffernd_params_array.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_params_array.diminfo[0].shape = __pyx_pybuffernd_params_array.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_params_array = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":202
 *         assert(p.ndim == 1)
 *         cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *         self.thisptr.getNextParameters(&params_array[0], params_array.shape[0])             # <<<<<<<<<<<<<<
 *         p[:] = params_array
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_params_array.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_params_array.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(1, 202, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->getNextParameters((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_params_array.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_params_array.diminfo[0].strides))), (__pyx_v_params_array->dimensions[0]));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 202, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":203
 *         cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *         self.thisptr.getNextParameters(&params_array[0], params_array.shape[0])
 *         p[:] = params_array             # <<<<<<<<<<<<<<
 * 
 *     def get_best_parameters(self, p):
 */
  if (__Pyx_PyObject_SetSlice(__pyx_v_p, ((PyObject *)__pyx_v_params_array), 0, 0, NULL, NULL, &__pyx_slice__5, 0, 0, 1) < 0) __PYX_ERR(1, 203, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":192
 *         self.thisptr.init(dimension, self.config_yaml)
 * 
 *     def get_next_parameters(self, p):             # <<<<<<<<<<<<<<
 *         """Get next individual/parameter vector for evaluation.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_params_array.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.get_next_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_params_array.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_params_array);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":205
 *         p[:] = params_array
 * 
 *     def get_best_parameters(self, p):             # <<<<<<<<<<<<<<
 *       """Get best individual/parameter vector for evaluation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_9get_best_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_p); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_8get_best_parameters[] = "Get best individual/parameter vector for evaluation.\n\n      Parameters\n      ----------\n      p : array_like, shape (num_p,)\n      parameter vector, will be modified\n      ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_9get_best_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_p) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_best_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_8get_best_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self), ((PyObject *)__pyx_v_p));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_8get_best_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_p) {
  PyArrayObject *__pyx_v_params_array = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_params_array;
  __Pyx_Buffer __pyx_pybuffer_params_array;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("get_best_parameters", 0);
  __pyx_pybuffer_params_array.pybuffer.buf = NULL;
  __pyx_pybuffer_params_array.refcount = 0;
  __pyx_pybuffernd_params_array.data = NULL;
  __pyx_pybuffernd_params_array.rcbuffer = &__pyx_pybuffer_params_array;

  /* "bolero/wrapper/_wrapper.pyx":213
 *       parameter vector, will be modified
 *       """
 *       assert(p.ndim == 1)             # <<<<<<<<<<<<<<
 *       cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *       self.thisptr.getBestParameters(&params_array[0], params_array.shape[0])
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(1, 213, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(1, 213, __pyx_L1_error)
    }
  }
  #endif

  /* "bolero/wrapper/_wrapper.pyx":214
 *       """
 *       assert(p.ndim == 1)
 *       cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)             # <<<<<<<<<<<<<<
 *       self.thisptr.getBestParameters(&params_array[0], params_array.shape[0])
 *       p[:] = params_array
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_p, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PySequence_Tuple(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_params_array.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_params_array = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_params_array.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 214, __pyx_L1_error)
    } else {__pyx_pybuffernd_params_array.diminfo[0].strides = __pyx_pybuffernd_params_array.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_params_array.diminfo[0].shape = __pyx_pybuffernd_params_array.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_params_array = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":215
 *       assert(p.ndim == 1)
 *       cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *       self.thisptr.getBestParameters(&params_array[0], params_array.shape[0])             # <<<<<<<<<<<<<<
 *       p[:] = params_array
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_params_array.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_params_array.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(1, 215, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->getBestParameters((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_params_array.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_params_array.diminfo[0].strides))), (__pyx_v_params_array->dimensions[0]));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 215, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":216
 *       cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *       self.thisptr.getBestParameters(&params_array[0], params_array.shape[0])
 *       p[:] = params_array             # <<<<<<<<<<<<<<
 * 
 *     def set_evaluation_feedback(self, rewards):
 */
  if (__Pyx_PyObject_SetSlice(__pyx_v_p, ((PyObject *)__pyx_v_params_array), 0, 0, NULL, NULL, &__pyx_slice__5, 0, 0, 1) < 0) __PYX_ERR(1, 216, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":205
 *         p[:] = params_array
 * 
 *     def get_best_parameters(self, p):             # <<<<<<<<<<<<<<
 *       """Get best individual/parameter vector for evaluation.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_params_array.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.get_best_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_params_array.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_params_array);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":218
 *       p[:] = params_array
 * 
 *     def set_evaluation_feedback(self, rewards):             # <<<<<<<<<<<<<<
 *         """Set feedbacks for the parameter vector.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_11set_evaluation_feedback(PyObject *__pyx_v_self, PyObject *__pyx_v_rewards); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_10set_evaluation_feedback[] = "Set feedbacks for the parameter vector.\n\n        Parameters\n        ----------\n        rewards : list of float\n            feedbacks for each step or for the episode, depends on the problem\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_11set_evaluation_feedback(PyObject *__pyx_v_self, PyObject *__pyx_v_rewards) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_evaluation_feedback (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_10set_evaluation_feedback(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self), ((PyObject *)__pyx_v_rewards));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_10set_evaluation_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, PyObject *__pyx_v_rewards) {
  PyArrayObject *__pyx_v_rewards_array = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_rewards_array;
  __Pyx_Buffer __pyx_pybuffer_rewards_array;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("set_evaluation_feedback", 0);
  __pyx_pybuffer_rewards_array.pybuffer.buf = NULL;
  __pyx_pybuffer_rewards_array.refcount = 0;
  __pyx_pybuffernd_rewards_array.data = NULL;
  __pyx_pybuffernd_rewards_array.rcbuffer = &__pyx_pybuffer_rewards_array;

  /* "bolero/wrapper/_wrapper.pyx":226
 *             feedbacks for each step or for the episode, depends on the problem
 *         """
 *         assert(rewards.ndim == 1)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] rewards_array = np.ndarray(*rewards.shape)
 *         rewards_array[:] = rewards
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_rewards, __pyx_n_s_ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 226, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(1, 226, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(1, 226, __pyx_L1_error)
    }
  }
  #endif

  /* "bolero/wrapper/_wrapper.pyx":227
 *         """
 *         assert(rewards.ndim == 1)
 *         cdef np.ndarray[double, ndim=1, mode="c"] rewards_array = np.ndarray(*rewards.shape)             # <<<<<<<<<<<<<<
 *         rewards_array[:] = rewards
 *         self.thisptr.setEvaluationFeedback(&rewards_array[0], rewards_array.shape[0])
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_rewards, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PySequence_Tuple(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_rewards_array.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_rewards_array = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_rewards_array.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 227, __pyx_L1_error)
    } else {__pyx_pybuffernd_rewards_array.diminfo[0].strides = __pyx_pybuffernd_rewards_array.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_rewards_array.diminfo[0].shape = __pyx_pybuffernd_rewards_array.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_rewards_array = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":228
 *         assert(rewards.ndim == 1)
 *         cdef np.ndarray[double, ndim=1, mode="c"] rewards_array = np.ndarray(*rewards.shape)
 *         rewards_array[:] = rewards             # <<<<<<<<<<<<<<
 *         self.thisptr.setEvaluationFeedback(&rewards_array[0], rewards_array.shape[0])
 * 
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_rewards_array), __pyx_slice__5, __pyx_v_rewards) < 0)) __PYX_ERR(1, 228, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":229
 *         cdef np.ndarray[double, ndim=1, mode="c"] rewards_array = np.ndarray(*rewards.shape)
 *         rewards_array[:] = rewards
 *         self.thisptr.setEvaluationFeedback(&rewards_array[0], rewards_array.shape[0])             # <<<<<<<<<<<<<<
 * 
 *     def is_behavior_learning_done(self):
 */
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_rewards_array.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_rewards_array.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(1, 229, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->setEvaluationFeedback((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_rewards_array.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_rewards_array.diminfo[0].strides))), (__pyx_v_rewards_array->dimensions[0]));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 229, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":218
 *       p[:] = params_array
 * 
 *     def set_evaluation_feedback(self, rewards):             # <<<<<<<<<<<<<<
 *         """Set feedbacks for the parameter vector.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rewards_array.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.set_evaluation_feedback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_rewards_array.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rewards_array);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":231
 *         self.thisptr.setEvaluationFeedback(&rewards_array[0], rewards_array.shape[0])
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_13is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_12is_behavior_learning_done[] = "Check if the behavior learning is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the learning of a behavior finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_13is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_behavior_learning_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_12is_behavior_learning_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_12is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_behavior_learning_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":239
 *             Is the learning of a behavior finished?
 *         """
 *         return self.thisptr.isBehaviorLearningDone()             # <<<<<<<<<<<<<<
 * 
 *     def get_best_parameters(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isBehaviorLearningDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 239, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":231
 *         self.thisptr.setEvaluationFeedback(&rewards_array[0], rewards_array.shape[0])
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.is_behavior_learning_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":241
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def get_best_parameters(self):             # <<<<<<<<<<<<<<
 *         """Return best parameters found so far by Optimizer.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_15get_best_parameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_14get_best_parameters[] = "Return best parameters found so far by Optimizer.\n\n        Returns\n        -------\n        parameters : array_like, shape = (num_p,)\n            best parameters found so far\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_15get_best_parameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_best_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_14get_best_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_14get_best_parameters(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_best_parameters", 0);

  /* "bolero/wrapper/_wrapper.pyx":250
 *         """
 *         # TODO add this function to C++ interface
 *         raise NotImplementedError("Cannot obtain best parameters from C++ optimizer!")             # <<<<<<<<<<<<<<
 * 
 * cdef class CppBehaviorSearch:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 250, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":241
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def get_best_parameters(self):             # <<<<<<<<<<<<<<
 *         """Return best parameters found so far by Optimizer.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.get_best_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_16__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_18__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_12CppOptimizer_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppOptimizer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":256
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":257
 * 
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer             # <<<<<<<<<<<<<<
 *         self.config_yaml = ""
 * 
 */
  __pyx_v_self->thisptr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":258
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""             # <<<<<<<<<<<<<<
 * 
 *     def initialize_yaml(self, config_yaml):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 258, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_t_1;

  /* "bolero/wrapper/_wrapper.pyx":256
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":260
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_2initialize_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self), ((PyObject *)__pyx_v_config_yaml));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":261
 * 
 *     def initialize_yaml(self, config_yaml):
 *         self.config_yaml = get_string(config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def init(self, num_inputs, num_outputs):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_yaml))||((__pyx_v_config_yaml) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_yaml)->tp_name), 0))) __PYX_ERR(1, 261, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_yaml));

  /* "bolero/wrapper/_wrapper.pyx":260
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.initialize_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":263
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self, num_inputs, num_outputs):             # <<<<<<<<<<<<<<
 *         """Initialize the behavior search.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_5init(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_4init[] = "Initialize the behavior search.\n\n        Parameters\n        ----------\n        num_inputs : int\n            number of inputs of the behavior\n        num_outputs : int\n            number of outputs of the behavior\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_5init(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_num_inputs = 0;
  PyObject *__pyx_v_num_outputs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_num_inputs,&__pyx_n_s_num_outputs,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_inputs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_num_outputs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("init", 1, 2, 2, 1); __PYX_ERR(1, 263, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "init") < 0)) __PYX_ERR(1, 263, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_num_inputs = values[0];
    __pyx_v_num_outputs = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("init", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 263, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_4init(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self), __pyx_v_num_inputs, __pyx_v_num_outputs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_num_inputs, PyObject *__pyx_v_num_outputs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("init", 0);

  /* "bolero/wrapper/_wrapper.pyx":273
 *             number of outputs of the behavior
 *         """
 *         self.thisptr.init(num_inputs, num_outputs, self.config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def get_next_behavior(self):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_num_inputs); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 273, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_num_outputs); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 273, __pyx_L1_error)
  try {
    __pyx_v_self->thisptr->init(__pyx_t_1, __pyx_t_2, __pyx_v_self->config_yaml);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 273, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":263
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self, num_inputs, num_outputs):             # <<<<<<<<<<<<<<
 *         """Initialize the behavior search.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":275
 *         self.thisptr.init(num_inputs, num_outputs, self.config_yaml)
 * 
 *     def get_next_behavior(self):             # <<<<<<<<<<<<<<
 *         """Obtain next behavior for evaluation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_7get_next_behavior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_6get_next_behavior[] = "Obtain next behavior for evaluation.\n\n        Returns\n        -------\n        behavior : Behavior\n            mapping from input to output\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_7get_next_behavior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_next_behavior (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_6get_next_behavior(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_6get_next_behavior(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_behavior = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  bolero::Behavior *__pyx_t_2;
  __Pyx_RefNannySetupContext("get_next_behavior", 0);

  /* "bolero/wrapper/_wrapper.pyx":283
 *             mapping from input to output
 *         """
 *         behavior = CppBehavior()             # <<<<<<<<<<<<<<
 *         behavior.thisptr = self.thisptr.getNextBehavior()
 *         return behavior
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehavior)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_behavior = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":284
 *         """
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getNextBehavior()             # <<<<<<<<<<<<<<
 *         return behavior
 * 
 */
  try {
    __pyx_t_2 = __pyx_v_self->thisptr->getNextBehavior();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 284, __pyx_L1_error)
  }
  __pyx_v_behavior->thisptr = __pyx_t_2;

  /* "bolero/wrapper/_wrapper.pyx":285
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getNextBehavior()
 *         return behavior             # <<<<<<<<<<<<<<
 * 
 *     def get_best_behavior(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_behavior));
  __pyx_r = ((PyObject *)__pyx_v_behavior);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":275
 *         self.thisptr.init(num_inputs, num_outputs, self.config_yaml)
 * 
 *     def get_next_behavior(self):             # <<<<<<<<<<<<<<
 *         """Obtain next behavior for evaluation.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.get_next_behavior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_behavior);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":287
 *         return behavior
 * 
 *     def get_best_behavior(self):             # <<<<<<<<<<<<<<
 *         """Returns the best behavior found so far.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_9get_best_behavior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_8get_best_behavior[] = "Returns the best behavior found so far.\n\n        Returns\n        -------\n        behavior : Behavior\n            mapping from input to output\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_9get_best_behavior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_best_behavior (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_8get_best_behavior(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_8get_best_behavior(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_behavior = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  bolero::Behavior *__pyx_t_2;
  int __pyx_t_3;
  __Pyx_RefNannySetupContext("get_best_behavior", 0);

  /* "bolero/wrapper/_wrapper.pyx":295
 *             mapping from input to output
 *         """
 *         behavior = CppBehavior()             # <<<<<<<<<<<<<<
 *         behavior.thisptr = self.thisptr.getBestBehavior()
 *         if behavior.thisptr == NULL:
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehavior)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_behavior = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":296
 *         """
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getBestBehavior()             # <<<<<<<<<<<<<<
 *         if behavior.thisptr == NULL:
 *             raise NotImplementedError("Behavior search does not implement "
 */
  try {
    __pyx_t_2 = __pyx_v_self->thisptr->getBestBehavior();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 296, __pyx_L1_error)
  }
  __pyx_v_behavior->thisptr = __pyx_t_2;

  /* "bolero/wrapper/_wrapper.pyx":297
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getBestBehavior()
 *         if behavior.thisptr == NULL:             # <<<<<<<<<<<<<<
 *             raise NotImplementedError("Behavior search does not implement "
 *                                       "getBestBehavior()")
 */
  __pyx_t_3 = ((__pyx_v_behavior->thisptr == NULL) != 0);
  if (unlikely(__pyx_t_3)) {

    /* "bolero/wrapper/_wrapper.pyx":298
 *         behavior.thisptr = self.thisptr.getBestBehavior()
 *         if behavior.thisptr == NULL:
 *             raise NotImplementedError("Behavior search does not implement "             # <<<<<<<<<<<<<<
 *                                       "getBestBehavior()")
 *         return behavior
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 298, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 298, __pyx_L1_error)

    /* "bolero/wrapper/_wrapper.pyx":297
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getBestBehavior()
 *         if behavior.thisptr == NULL:             # <<<<<<<<<<<<<<
 *             raise NotImplementedError("Behavior search does not implement "
 *                                       "getBestBehavior()")
 */
  }

  /* "bolero/wrapper/_wrapper.pyx":300
 *             raise NotImplementedError("Behavior search does not implement "
 *                                       "getBestBehavior()")
 *         return behavior             # <<<<<<<<<<<<<<
 * 
 *     def set_evaluation_feedback(self, feedbacks):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_behavior));
  __pyx_r = ((PyObject *)__pyx_v_behavior);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":287
 *         return behavior
 * 
 *     def get_best_behavior(self):             # <<<<<<<<<<<<<<
 *         """Returns the best behavior found so far.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.get_best_behavior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_behavior);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":302
 *         return behavior
 * 
 *     def set_evaluation_feedback(self, feedbacks):             # <<<<<<<<<<<<<<
 *         """Set feedback for the last behavior.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_11set_evaluation_feedback(PyObject *__pyx_v_self, PyObject *__pyx_v_feedbacks); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_10set_evaluation_feedback[] = "Set feedback for the last behavior.\n\n        Parameters\n        ----------\n        feedbacks : list of float\n            feedback for each step or for the episode, depends on the problem\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_11set_evaluation_feedback(PyObject *__pyx_v_self, PyObject *__pyx_v_feedbacks) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_evaluation_feedback (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_10set_evaluation_feedback(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self), ((PyObject *)__pyx_v_feedbacks));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_10set_evaluation_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_feedbacks) {
  PyArrayObject *__pyx_v_feedbacks_array = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_feedbacks_array;
  __Pyx_Buffer __pyx_pybuffer_feedbacks_array;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("set_evaluation_feedback", 0);
  __pyx_pybuffer_feedbacks_array.pybuffer.buf = NULL;
  __pyx_pybuffer_feedbacks_array.refcount = 0;
  __pyx_pybuffernd_feedbacks_array.data = NULL;
  __pyx_pybuffernd_feedbacks_array.rcbuffer = &__pyx_pybuffer_feedbacks_array;

  /* "bolero/wrapper/_wrapper.pyx":310
 *             feedback for each step or for the episode, depends on the problem
 *         """
 *         assert(feedbacks.ndim == 1)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedbacks_array = np.ndarray(*feedbacks.shape)
 *         feedbacks_array[:] = feedbacks
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_feedbacks, __pyx_n_s_ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 310, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(1, 310, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(1, 310, __pyx_L1_error)
    }
  }
  #endif

  /* "bolero/wrapper/_wrapper.pyx":311
 *         """
 *         assert(feedbacks.ndim == 1)
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedbacks_array = np.ndarray(*feedbacks.shape)             # <<<<<<<<<<<<<<
 *         feedbacks_array[:] = feedbacks
 *         self.thisptr.setEvaluationFeedback(&feedbacks_array[0], feedbacks_array.shape[0])
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_feedbacks, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PySequence_Tuple(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_feedbacks_array = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 311, __pyx_L1_error)
    } else {__pyx_pybuffernd_feedbacks_array.diminfo[0].strides = __pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_feedbacks_array.diminfo[0].shape = __pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_feedbacks_array = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":312
 *         assert(feedbacks.ndim == 1)
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedbacks_array = np.ndarray(*feedbacks.shape)
 *         feedbacks_array[:] = feedbacks             # <<<<<<<<<<<<<<
 *         self.thisptr.setEvaluationFeedback(&feedbacks_array[0], feedbacks_array.shape[0])
 * 
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_feedbacks_array), __pyx_slice__5, __pyx_v_feedbacks) < 0)) __PYX_ERR(1, 312, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":313
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedbacks_array = np.ndarray(*feedbacks.shape)
 *         feedbacks_array[:] = feedbacks
 *         self.thisptr.setEvaluationFeedback(&feedbacks_array[0], feedbacks_array.shape[0])             # <<<<<<<<<<<<<<
 * 
 *     def write_results(self, result_path):
 */
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_feedbacks_array.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_feedbacks_array.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(1, 313, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->setEvaluationFeedback((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_feedbacks_array.diminfo[0].strides))), (__pyx_v_feedbacks_array->dimensions[0]));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 313, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":302
 *         return behavior
 * 
 *     def set_evaluation_feedback(self, feedbacks):             # <<<<<<<<<<<<<<
 *         """Set feedback for the last behavior.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.set_evaluation_feedback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_feedbacks_array.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_feedbacks_array);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":315
 *         self.thisptr.setEvaluationFeedback(&feedbacks_array[0], feedbacks_array.shape[0])
 * 
 *     def write_results(self, result_path):             # <<<<<<<<<<<<<<
 *         """Store current search state.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_13write_results(PyObject *__pyx_v_self, PyObject *__pyx_v_result_path); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_12write_results[] = "Store current search state.\n\n        Parameters\n        ----------\n        result_path : string\n            path in which the state should be stored\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_13write_results(PyObject *__pyx_v_self, PyObject *__pyx_v_result_path) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write_results (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_12write_results(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self), ((PyObject *)__pyx_v_result_path));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_12write_results(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_result_path) {
  std::string __pyx_v_result_path_str;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("write_results", 0);

  /* "bolero/wrapper/_wrapper.pyx":323
 *             path in which the state should be stored
 *         """
 *         cdef string result_path_str = get_string(result_path)             # <<<<<<<<<<<<<<
 *         self.thisptr.writeResults(result_path_str)
 * 
 */
  if (!(likely(PyString_CheckExact(__pyx_v_result_path))||((__pyx_v_result_path) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_result_path)->tp_name), 0))) __PYX_ERR(1, 323, __pyx_L1_error)
  __pyx_v_result_path_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_result_path));

  /* "bolero/wrapper/_wrapper.pyx":324
 *         """
 *         cdef string result_path_str = get_string(result_path)
 *         self.thisptr.writeResults(result_path_str)             # <<<<<<<<<<<<<<
 * 
 *     def get_behavior_from_results(self, result_path):
 */
  try {
    __pyx_v_self->thisptr->writeResults(__pyx_v_result_path_str);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 324, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":315
 *         self.thisptr.setEvaluationFeedback(&feedbacks_array[0], feedbacks_array.shape[0])
 * 
 *     def write_results(self, result_path):             # <<<<<<<<<<<<<<
 *         """Store current search state.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.write_results", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":326
 *         self.thisptr.writeResults(result_path_str)
 * 
 *     def get_behavior_from_results(self, result_path):             # <<<<<<<<<<<<<<
 *         """Recover search state from file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_15get_behavior_from_results(PyObject *__pyx_v_self, PyObject *__pyx_v_result_path); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_14get_behavior_from_results[] = "Recover search state from file.\n\n        Parameters\n        ----------\n        result_path : string\n            path in which we search for the file\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_15get_behavior_from_results(PyObject *__pyx_v_self, PyObject *__pyx_v_result_path) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_behavior_from_results (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_14get_behavior_from_results(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self), ((PyObject *)__pyx_v_result_path));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_14get_behavior_from_results(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, PyObject *__pyx_v_result_path) {
  std::string __pyx_v_result_path_str;
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_behavior = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  bolero::Behavior *__pyx_t_2;
  __Pyx_RefNannySetupContext("get_behavior_from_results", 0);

  /* "bolero/wrapper/_wrapper.pyx":334
 *             path in which we search for the file
 *         """
 *         cdef string result_path_str = get_string(result_path)             # <<<<<<<<<<<<<<
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getBehaviorFromResults(result_path_str)
 */
  if (!(likely(PyString_CheckExact(__pyx_v_result_path))||((__pyx_v_result_path) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_result_path)->tp_name), 0))) __PYX_ERR(1, 334, __pyx_L1_error)
  __pyx_v_result_path_str = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_result_path));

  /* "bolero/wrapper/_wrapper.pyx":335
 *         """
 *         cdef string result_path_str = get_string(result_path)
 *         behavior = CppBehavior()             # <<<<<<<<<<<<<<
 *         behavior.thisptr = self.thisptr.getBehaviorFromResults(result_path_str)
 *         return behavior
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehavior)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_behavior = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":336
 *         cdef string result_path_str = get_string(result_path)
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getBehaviorFromResults(result_path_str)             # <<<<<<<<<<<<<<
 *         return behavior
 * 
 */
  try {
    __pyx_t_2 = __pyx_v_self->thisptr->getBehaviorFromResults(__pyx_v_result_path_str);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 336, __pyx_L1_error)
  }
  __pyx_v_behavior->thisptr = __pyx_t_2;

  /* "bolero/wrapper/_wrapper.pyx":337
 *         behavior = CppBehavior()
 *         behavior.thisptr = self.thisptr.getBehaviorFromResults(result_path_str)
 *         return behavior             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_behavior));
  __pyx_r = ((PyObject *)__pyx_v_behavior);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":326
 *         self.thisptr.writeResults(result_path_str)
 * 
 *     def get_behavior_from_results(self, result_path):             # <<<<<<<<<<<<<<
 *         """Recover search state from file.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.get_behavior_from_results", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_behavior);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_16__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_18__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehaviorSearch.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":344
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":345
 * 
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer             # <<<<<<<<<<<<<<
 *         self.config_yaml = ""
 * 
 */
  __pyx_v_self->thisptr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":346
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""             # <<<<<<<<<<<<<<
 * 
 *     def initialize_yaml(self, config_yaml):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 346, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_t_1;

  /* "bolero/wrapper/_wrapper.pyx":344
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":348
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_2initialize_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_config_yaml));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":349
 * 
 *     def initialize_yaml(self, config_yaml):
 *         self.config_yaml = get_string(config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def init(self):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_yaml))||((__pyx_v_config_yaml) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_yaml)->tp_name), 0))) __PYX_ERR(1, 349, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_yaml));

  /* "bolero/wrapper/_wrapper.pyx":348
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.initialize_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":351
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self):             # <<<<<<<<<<<<<<
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_5init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_4init[] = "Initialize environment.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_5init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_4init(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "bolero/wrapper/_wrapper.pyx":353
 *     def init(self):
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  try {
    __pyx_v_self->thisptr->init(__pyx_v_self->config_yaml);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 353, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":351
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self):             # <<<<<<<<<<<<<<
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":355
 *         self.thisptr.init(self.config_yaml)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset state of the environment."""
 *         self.thisptr.reset()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_7reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_6reset[] = "Reset state of the environment.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_7reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_6reset(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_6reset(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset", 0);

  /* "bolero/wrapper/_wrapper.pyx":357
 *     def reset(self):
 *         """Reset state of the environment."""
 *         self.thisptr.reset()             # <<<<<<<<<<<<<<
 * 
 *     def get_num_inputs(self):
 */
  try {
    __pyx_v_self->thisptr->reset();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 357, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":355
 *         self.thisptr.init(self.config_yaml)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset state of the environment."""
 *         self.thisptr.reset()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":359
 *         self.thisptr.reset()
 * 
 *     def get_num_inputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment inputs.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_9get_num_inputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_8get_num_inputs[] = "Get number of environment inputs.\n\n        Parameters\n        ----------\n        n : int\n            number of environment inputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_9get_num_inputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_8get_num_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_8get_num_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_inputs", 0);

  /* "bolero/wrapper/_wrapper.pyx":367
 *             number of environment inputs
 *         """
 *         return self.thisptr.getNumInputs()             # <<<<<<<<<<<<<<
 * 
 *     def get_num_outputs(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->getNumInputs();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 367, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":359
 *         self.thisptr.reset()
 * 
 *     def get_num_inputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment inputs.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.get_num_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":369
 *         return self.thisptr.getNumInputs()
 * 
 *     def get_num_outputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment outputs.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_11get_num_outputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_10get_num_outputs[] = "Get number of environment outputs.\n\n        Parameters\n        ----------\n        n : int\n            number of environment outputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_11get_num_outputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_10get_num_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_10get_num_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_outputs", 0);

  /* "bolero/wrapper/_wrapper.pyx":377
 *             number of environment outputs
 *         """
 *         return self.thisptr.getNumOutputs()             # <<<<<<<<<<<<<<
 * 
 *     def get_outputs(self, values):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->getNumOutputs();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 377, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":369
 *         return self.thisptr.getNumInputs()
 * 
 *     def get_num_outputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment outputs.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.get_num_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":379
 *         return self.thisptr.getNumOutputs()
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get environment outputs, e.g. state of the environment.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_13get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_12get_outputs[] = "Get environment outputs, e.g. state of the environment.\n\n        Parameters\n        ----------\n        values : array\n            outputs for the environment, will be modified\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_13get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_12get_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_12get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_outputs;
  PyArrayObject *__pyx_v_outputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_outputs;
  __Pyx_Buffer __pyx_pybuffer_outputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  __Pyx_RefNannySetupContext("get_outputs", 0);
  __pyx_pybuffer_outputs.pybuffer.buf = NULL;
  __pyx_pybuffer_outputs.refcount = 0;
  __pyx_pybuffernd_outputs.data = NULL;
  __pyx_pybuffernd_outputs.rcbuffer = &__pyx_pybuffer_outputs;

  /* "bolero/wrapper/_wrapper.pyx":387
 *             outputs for the environment, will be modified
 *         """
 *         cdef int n_outputs = self.get_num_outputs()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         if n_outputs > 0:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_outputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 387, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 387, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_outputs = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":388
 *         """
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)             # <<<<<<<<<<<<<<
 *         if n_outputs > 0:
 *             self.thisptr.getOutputs(&outputs[0], n_outputs)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_outputs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_outputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 388, __pyx_L1_error)
    } else {__pyx_pybuffernd_outputs.diminfo[0].strides = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_outputs.diminfo[0].shape = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_outputs = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":389
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         if n_outputs > 0:             # <<<<<<<<<<<<<<
 *             self.thisptr.getOutputs(&outputs[0], n_outputs)
 *             values[:] = outputs
 */
  __pyx_t_5 = ((__pyx_v_n_outputs > 0) != 0);
  if (__pyx_t_5) {

    /* "bolero/wrapper/_wrapper.pyx":390
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         if n_outputs > 0:
 *             self.thisptr.getOutputs(&outputs[0], n_outputs)             # <<<<<<<<<<<<<<
 *             values[:] = outputs
 * 
 */
    __pyx_t_6 = 0;
    __pyx_t_4 = -1;
    if (__pyx_t_6 < 0) {
      __pyx_t_6 += __pyx_pybuffernd_outputs.diminfo[0].shape;
      if (unlikely(__pyx_t_6 < 0)) __pyx_t_4 = 0;
    } else if (unlikely(__pyx_t_6 >= __pyx_pybuffernd_outputs.diminfo[0].shape)) __pyx_t_4 = 0;
    if (unlikely(__pyx_t_4 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_4);
      __PYX_ERR(1, 390, __pyx_L1_error)
    }
    try {
      __pyx_v_self->thisptr->getOutputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf, __pyx_t_6, __pyx_pybuffernd_outputs.diminfo[0].strides))), __pyx_v_n_outputs);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(1, 390, __pyx_L1_error)
    }

    /* "bolero/wrapper/_wrapper.pyx":391
 *         if n_outputs > 0:
 *             self.thisptr.getOutputs(&outputs[0], n_outputs)
 *             values[:] = outputs             # <<<<<<<<<<<<<<
 * 
 *     def set_inputs(self, values):
 */
    if (__Pyx_PyObject_SetSlice(__pyx_v_values, ((PyObject *)__pyx_v_outputs), 0, 0, NULL, NULL, &__pyx_slice__5, 0, 0, 1) < 0) __PYX_ERR(1, 391, __pyx_L1_error)

    /* "bolero/wrapper/_wrapper.pyx":389
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         if n_outputs > 0:             # <<<<<<<<<<<<<<
 *             self.thisptr.getOutputs(&outputs[0], n_outputs)
 *             values[:] = outputs
 */
  }

  /* "bolero/wrapper/_wrapper.pyx":379
 *         return self.thisptr.getNumOutputs()
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get environment outputs, e.g. state of the environment.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.get_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_outputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":393
 *             values[:] = outputs
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set environment inputs, e.g. next action.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_15set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_14set_inputs[] = "Set environment inputs, e.g. next action.\n\n        Parameters\n        ----------\n        values : array,\n            input of the environment\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_15set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_14set_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_14set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_inputs;
  PyArrayObject *__pyx_v_inputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_inputs;
  __Pyx_Buffer __pyx_pybuffer_inputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("set_inputs", 0);
  __pyx_pybuffer_inputs.pybuffer.buf = NULL;
  __pyx_pybuffer_inputs.refcount = 0;
  __pyx_pybuffernd_inputs.data = NULL;
  __pyx_pybuffernd_inputs.rcbuffer = &__pyx_pybuffer_inputs;

  /* "bolero/wrapper/_wrapper.pyx":401
 *             input of the environment
 *         """
 *         cdef int n_inputs = self.get_num_inputs()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_inputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 401, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_inputs = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":402
 *         """
 *         cdef int n_inputs = self.get_num_inputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)             # <<<<<<<<<<<<<<
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_inputs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_inputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 402, __pyx_L1_error)
    } else {__pyx_pybuffernd_inputs.diminfo[0].strides = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_inputs.diminfo[0].shape = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_inputs = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":403
 *         cdef int n_inputs = self.get_num_inputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values             # <<<<<<<<<<<<<<
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_inputs), __pyx_slice__5, __pyx_v_values) < 0)) __PYX_ERR(1, 403, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":404
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)             # <<<<<<<<<<<<<<
 * 
 *     def step_action(self):
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_inputs.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_inputs.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 404, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->setInputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_inputs.diminfo[0].strides))), __pyx_v_n_inputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 404, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":393
 *             values[:] = outputs
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set environment inputs, e.g. next action.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.set_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_inputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":406
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def step_action(self):             # <<<<<<<<<<<<<<
 *         """Take a step in the environment.
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_17step_action(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_16step_action[] = "Take a step in the environment.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_17step_action(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step_action (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_16step_action(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_16step_action(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step_action", 0);

  /* "bolero/wrapper/_wrapper.pyx":409
 *         """Take a step in the environment.
 *         """
 *         self.thisptr.stepAction()             # <<<<<<<<<<<<<<
 * 
 *     def is_evaluation_done(self):
 */
  try {
    __pyx_v_self->thisptr->stepAction();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 409, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":406
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def step_action(self):             # <<<<<<<<<<<<<<
 *         """Take a step in the environment.
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.step_action", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":411
 *         self.thisptr.stepAction()
 * 
 *     def is_evaluation_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the evaluation of the behavior is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_19is_evaluation_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_18is_evaluation_done[] = "Check if the evaluation of the behavior is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the evaluation finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_19is_evaluation_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_evaluation_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_18is_evaluation_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_18is_evaluation_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_evaluation_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":419
 *             Is the evaluation finished?
 *         """
 *         return self.thisptr.isEvaluationDone()             # <<<<<<<<<<<<<<
 * 
 *     def get_feedback(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isEvaluationDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 419, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":411
 *         self.thisptr.stepAction()
 * 
 *     def is_evaluation_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the evaluation of the behavior is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.is_evaluation_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":421
 *         return self.thisptr.isEvaluationDone()
 * 
 *     def get_feedback(self):             # <<<<<<<<<<<<<<
 *         """Get the feedbacks for the last evaluation period.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_21get_feedback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_20get_feedback[] = "Get the feedbacks for the last evaluation period.\n\n        Returns\n        -------\n        feedback : array\n            Feedback values\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_21get_feedback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_feedback (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_20get_feedback(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_20get_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyArrayObject *__pyx_v_feedback = 0;
  int __pyx_v_n_feedbacks;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_feedback;
  __Pyx_Buffer __pyx_pybuffer_feedback;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("get_feedback", 0);
  __pyx_pybuffer_feedback.pybuffer.buf = NULL;
  __pyx_pybuffer_feedback.refcount = 0;
  __pyx_pybuffernd_feedback.data = NULL;
  __pyx_pybuffernd_feedback.rcbuffer = &__pyx_pybuffer_feedback;

  /* "bolero/wrapper/_wrapper.pyx":429
 *             Feedback values
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)             # <<<<<<<<<<<<<<
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_feedback.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_feedback = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_feedback.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 429, __pyx_L1_error)
    } else {__pyx_pybuffernd_feedback.diminfo[0].strides = __pyx_pybuffernd_feedback.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_feedback.diminfo[0].shape = __pyx_pybuffernd_feedback.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_feedback = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":430
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])             # <<<<<<<<<<<<<<
 *         if n_feedbacks > 1000:
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 */
  __pyx_t_2 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_pybuffernd_feedback.diminfo[0].shape;
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_2 >= __pyx_pybuffernd_feedback.diminfo[0].shape)) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 430, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = __pyx_v_self->thisptr->getFeedback((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_feedback.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_feedback.diminfo[0].strides))));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 430, __pyx_L1_error)
  }
  __pyx_v_n_feedbacks = __pyx_t_3;

  /* "bolero/wrapper/_wrapper.pyx":431
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:             # <<<<<<<<<<<<<<
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 *                              "wrapper code")
 */
  __pyx_t_4 = ((__pyx_v_n_feedbacks > 0x3E8) != 0);
  if (unlikely(__pyx_t_4)) {

    /* "bolero/wrapper/_wrapper.pyx":432
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "             # <<<<<<<<<<<<<<
 *                              "wrapper code")
 *         return feedback[:n_feedbacks]
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 432, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 432, __pyx_L1_error)

    /* "bolero/wrapper/_wrapper.pyx":431
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:             # <<<<<<<<<<<<<<
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 *                              "wrapper code")
 */
  }

  /* "bolero/wrapper/_wrapper.pyx":434
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 *                              "wrapper code")
 *         return feedback[:n_feedbacks]             # <<<<<<<<<<<<<<
 * 
 *     def is_behavior_learning_done(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_feedbacks); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PySlice_New(Py_None, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_feedback), __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 434, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":421
 *         return self.thisptr.isEvaluationDone()
 * 
 *     def get_feedback(self):             # <<<<<<<<<<<<<<
 *         """Get the feedbacks for the last evaluation period.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_feedback.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.get_feedback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_feedback.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_feedback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":436
 *         return feedback[:n_feedbacks]
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_23is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_22is_behavior_learning_done[] = "Check if the behavior learning is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the learning of a behavior finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_23is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_behavior_learning_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_22is_behavior_learning_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_22is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_behavior_learning_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":444
 *             Is the learning of a behavior finished?
 *         """
 *         return self.thisptr.isBehaviorLearningDone()             # <<<<<<<<<<<<<<
 * 
 *     def is_contextual(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isBehaviorLearningDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 444, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":436
 *         return feedback[:n_feedbacks]
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.is_behavior_learning_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":446
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def is_contextual(self):             # <<<<<<<<<<<<<<
 *         """Return whether environment is contextual
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_25is_contextual(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_24is_contextual[] = "Return whether environment is contextual\n\n        Returns\n        -------\n        contextual : bool\n            whether this environment is contextual\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_25is_contextual(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_contextual (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_24is_contextual(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_24is_contextual(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_contextual", 0);

  /* "bolero/wrapper/_wrapper.pyx":454
 *             whether this environment is contextual
 *         """
 *         return self.thisptr.isContextual()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isContextual();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 454, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 454, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":446
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def is_contextual(self):             # <<<<<<<<<<<<<<
 *         """Return whether environment is contextual
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.is_contextual", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_27__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_27__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_26__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_26__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_29__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_29__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_28__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_14CppEnvironment_28__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppEnvironment.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":461
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *         self.config_yaml = ""
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":462
 * 
 *     def __cinit__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 *         self.config_yaml = ""
 * 
 */
  __pyx_v_self->thisptr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":463
 *     def __cinit__(self):
 *         self.thisptr = NULL
 *         self.config_yaml = ""             # <<<<<<<<<<<<<<
 * 
 *     def initialize_yaml(self, config_yaml):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 463, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_t_1;

  /* "bolero/wrapper/_wrapper.pyx":461
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *         self.config_yaml = ""
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":465
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_2initialize_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_config_yaml));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":466
 * 
 *     def initialize_yaml(self, config_yaml):
 *         self.config_yaml = get_string(config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_yaml))||((__pyx_v_config_yaml) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_yaml)->tp_name), 0))) __PYX_ERR(1, 466, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_yaml));

  /* "bolero/wrapper/_wrapper.pyx":465
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.initialize_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":468
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_5__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_4__dealloc__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_4__dealloc__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bolero/wrapper/_wrapper.pyx":469
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def init(self):
 */
  delete __pyx_v_self->thisptr;

  /* "bolero/wrapper/_wrapper.pyx":468
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bolero/wrapper/_wrapper.pyx":471
 *         del self.thisptr
 * 
 *     def init(self):             # <<<<<<<<<<<<<<
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_7init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_6init[] = "Initialize environment.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_7init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_6init(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_6init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init", 0);

  /* "bolero/wrapper/_wrapper.pyx":473
 *     def init(self):
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  try {
    __pyx_v_self->thisptr->init(__pyx_v_self->config_yaml);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 473, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":471
 *         del self.thisptr
 * 
 *     def init(self):             # <<<<<<<<<<<<<<
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":475
 *         self.thisptr.init(self.config_yaml)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset state of the environment."""
 *         self.thisptr.reset()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_8reset[] = "Reset state of the environment.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_8reset(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_8reset(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset", 0);

  /* "bolero/wrapper/_wrapper.pyx":477
 *     def reset(self):
 *         """Reset state of the environment."""
 *         self.thisptr.reset()             # <<<<<<<<<<<<<<
 * 
 *     def get_num_inputs(self):
 */
  try {
    __pyx_v_self->thisptr->reset();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 477, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":475
 *         self.thisptr.init(self.config_yaml)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset state of the environment."""
 *         self.thisptr.reset()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":479
 *         self.thisptr.reset()
 * 
 *     def get_num_inputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment inputs.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_11get_num_inputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_10get_num_inputs[] = "Get number of environment inputs.\n\n        Parameters\n        ----------\n        n : int\n            number of environment inputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_11get_num_inputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_10get_num_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_10get_num_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_inputs", 0);

  /* "bolero/wrapper/_wrapper.pyx":487
 *             number of environment inputs
 *         """
 *         return self.thisptr.getNumInputs()             # <<<<<<<<<<<<<<
 * 
 *     def get_num_outputs(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->getNumInputs();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 487, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":479
 *         self.thisptr.reset()
 * 
 *     def get_num_inputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment inputs.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.get_num_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":489
 *         return self.thisptr.getNumInputs()
 * 
 *     def get_num_outputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment outputs.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_13get_num_outputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_12get_num_outputs[] = "Get number of environment outputs.\n\n        Parameters\n        ----------\n        n : int\n            number of environment outputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_13get_num_outputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_12get_num_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_12get_num_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_outputs", 0);

  /* "bolero/wrapper/_wrapper.pyx":497
 *             number of environment outputs
 *         """
 *         return self.thisptr.getNumOutputs()             # <<<<<<<<<<<<<<
 * 
 *     def get_outputs(self, values):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->getNumOutputs();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 497, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":489
 *         return self.thisptr.getNumInputs()
 * 
 *     def get_num_outputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment outputs.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.get_num_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":499
 *         return self.thisptr.getNumOutputs()
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get environment outputs, e.g. state of the environment.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_15get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_14get_outputs[] = "Get environment outputs, e.g. state of the environment.\n\n        Parameters\n        ----------\n        values : array\n            outputs for the environment, will be modified\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_15get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_14get_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_14get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_outputs;
  PyArrayObject *__pyx_v_outputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_outputs;
  __Pyx_Buffer __pyx_pybuffer_outputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("get_outputs", 0);
  __pyx_pybuffer_outputs.pybuffer.buf = NULL;
  __pyx_pybuffer_outputs.refcount = 0;
  __pyx_pybuffernd_outputs.data = NULL;
  __pyx_pybuffernd_outputs.rcbuffer = &__pyx_pybuffer_outputs;

  /* "bolero/wrapper/_wrapper.pyx":507
 *             outputs for the environment, will be modified
 *         """
 *         cdef int n_outputs = self.get_num_outputs()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_outputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 507, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_outputs = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":508
 *         """
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)             # <<<<<<<<<<<<<<
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 *         values[:] = outputs
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_outputs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_outputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 508, __pyx_L1_error)
    } else {__pyx_pybuffernd_outputs.diminfo[0].strides = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_outputs.diminfo[0].shape = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_outputs = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":509
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)             # <<<<<<<<<<<<<<
 *         values[:] = outputs
 * 
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_outputs.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_outputs.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 509, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->getOutputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_outputs.diminfo[0].strides))), __pyx_v_n_outputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 509, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":510
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 *         values[:] = outputs             # <<<<<<<<<<<<<<
 * 
 *     def set_inputs(self, values):
 */
  if (__Pyx_PyObject_SetSlice(__pyx_v_values, ((PyObject *)__pyx_v_outputs), 0, 0, NULL, NULL, &__pyx_slice__5, 0, 0, 1) < 0) __PYX_ERR(1, 510, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":499
 *         return self.thisptr.getNumOutputs()
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get environment outputs, e.g. state of the environment.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.get_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_outputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":512
 *         values[:] = outputs
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set environment inputs, e.g. next action.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_17set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_16set_inputs[] = "Set environment inputs, e.g. next action.\n\n        Parameters\n        ----------\n        values : array,\n            input of the environment\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_17set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_16set_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_16set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_inputs;
  PyArrayObject *__pyx_v_inputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_inputs;
  __Pyx_Buffer __pyx_pybuffer_inputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("set_inputs", 0);
  __pyx_pybuffer_inputs.pybuffer.buf = NULL;
  __pyx_pybuffer_inputs.refcount = 0;
  __pyx_pybuffernd_inputs.data = NULL;
  __pyx_pybuffernd_inputs.rcbuffer = &__pyx_pybuffer_inputs;

  /* "bolero/wrapper/_wrapper.pyx":520
 *             input of the environment
 *         """
 *         cdef int n_inputs = self.get_num_inputs()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_inputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 520, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_inputs = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":521
 *         """
 *         cdef int n_inputs = self.get_num_inputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)             # <<<<<<<<<<<<<<
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_inputs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_inputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 521, __pyx_L1_error)
    } else {__pyx_pybuffernd_inputs.diminfo[0].strides = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_inputs.diminfo[0].shape = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_inputs = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":522
 *         cdef int n_inputs = self.get_num_inputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values             # <<<<<<<<<<<<<<
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_inputs), __pyx_slice__5, __pyx_v_values) < 0)) __PYX_ERR(1, 522, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":523
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)             # <<<<<<<<<<<<<<
 * 
 *     def step_action(self):
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_inputs.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_inputs.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 523, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->setInputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_inputs.diminfo[0].strides))), __pyx_v_n_inputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 523, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":512
 *         values[:] = outputs
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set environment inputs, e.g. next action.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.set_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_inputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":525
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def step_action(self):             # <<<<<<<<<<<<<<
 *         """Take a step in the environment.
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_19step_action(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_18step_action[] = "Take a step in the environment.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_19step_action(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step_action (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_18step_action(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_18step_action(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step_action", 0);

  /* "bolero/wrapper/_wrapper.pyx":528
 *         """Take a step in the environment.
 *         """
 *         self.thisptr.stepAction()             # <<<<<<<<<<<<<<
 * 
 *     def is_evaluation_done(self):
 */
  try {
    __pyx_v_self->thisptr->stepAction();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 528, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":525
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def step_action(self):             # <<<<<<<<<<<<<<
 *         """Take a step in the environment.
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.step_action", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":530
 *         self.thisptr.stepAction()
 * 
 *     def is_evaluation_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the evaluation of the behavior is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_21is_evaluation_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_20is_evaluation_done[] = "Check if the evaluation of the behavior is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the evaluation finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_21is_evaluation_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_evaluation_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_20is_evaluation_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_20is_evaluation_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_evaluation_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":538
 *             Is the evaluation finished?
 *         """
 *         return self.thisptr.isEvaluationDone()             # <<<<<<<<<<<<<<
 * 
 *     def get_feedback(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isEvaluationDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 538, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":530
 *         self.thisptr.stepAction()
 * 
 *     def is_evaluation_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the evaluation of the behavior is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.is_evaluation_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":540
 *         return self.thisptr.isEvaluationDone()
 * 
 *     def get_feedback(self):             # <<<<<<<<<<<<<<
 *         """Get the feedbacks for the last evaluation period.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_23get_feedback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_22get_feedback[] = "Get the feedbacks for the last evaluation period.\n\n        Returns\n        -------\n        feedback : array\n            Feedback values\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_23get_feedback(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_feedback (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_22get_feedback(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_22get_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyArrayObject *__pyx_v_feedback = 0;
  int __pyx_v_n_feedbacks;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_feedback;
  __Pyx_Buffer __pyx_pybuffer_feedback;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_RefNannySetupContext("get_feedback", 0);
  __pyx_pybuffer_feedback.pybuffer.buf = NULL;
  __pyx_pybuffer_feedback.refcount = 0;
  __pyx_pybuffernd_feedback.data = NULL;
  __pyx_pybuffernd_feedback.rcbuffer = &__pyx_pybuffer_feedback;

  /* "bolero/wrapper/_wrapper.pyx":548
 *             Feedback values
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)             # <<<<<<<<<<<<<<
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_feedback.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_feedback = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_feedback.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 548, __pyx_L1_error)
    } else {__pyx_pybuffernd_feedback.diminfo[0].strides = __pyx_pybuffernd_feedback.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_feedback.diminfo[0].shape = __pyx_pybuffernd_feedback.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_feedback = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":549
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])             # <<<<<<<<<<<<<<
 *         if n_feedbacks > 1000:
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 */
  __pyx_t_2 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_pybuffernd_feedback.diminfo[0].shape;
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_2 >= __pyx_pybuffernd_feedback.diminfo[0].shape)) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 549, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = __pyx_v_self->thisptr->getFeedback((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_feedback.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_feedback.diminfo[0].strides))));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 549, __pyx_L1_error)
  }
  __pyx_v_n_feedbacks = __pyx_t_3;

  /* "bolero/wrapper/_wrapper.pyx":550
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:             # <<<<<<<<<<<<<<
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 *                              "wrapper code")
 */
  __pyx_t_4 = ((__pyx_v_n_feedbacks > 0x3E8) != 0);
  if (unlikely(__pyx_t_4)) {

    /* "bolero/wrapper/_wrapper.pyx":551
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "             # <<<<<<<<<<<<<<
 *                              "wrapper code")
 *         return feedback[:n_feedbacks]
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 551, __pyx_L1_error)

    /* "bolero/wrapper/_wrapper.pyx":550
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:             # <<<<<<<<<<<<<<
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 *                              "wrapper code")
 */
  }

  /* "bolero/wrapper/_wrapper.pyx":553
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "
 *                              "wrapper code")
 *         return feedback[:n_feedbacks]             # <<<<<<<<<<<<<<
 * 
 *     def is_behavior_learning_done(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_feedbacks); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PySlice_New(Py_None, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_feedback), __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":540
 *         return self.thisptr.isEvaluationDone()
 * 
 *     def get_feedback(self):             # <<<<<<<<<<<<<<
 *         """Get the feedbacks for the last evaluation period.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_feedback.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.get_feedback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_feedback.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_feedback);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":555
 *         return feedback[:n_feedbacks]
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_25is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_24is_behavior_learning_done[] = "Check if the behavior learning is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the learning of a behavior finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_25is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_behavior_learning_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_24is_behavior_learning_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_24is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_behavior_learning_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":563
 *             Is the learning of a behavior finished?
 *         """
 *         return self.thisptr.isBehaviorLearningDone()             # <<<<<<<<<<<<<<
 * 
 *     def is_contextual(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isBehaviorLearningDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 563, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":555
 *         return feedback[:n_feedbacks]
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.is_behavior_learning_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":565
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def is_contextual(self):             # <<<<<<<<<<<<<<
 *         """Return whether environment is contextual
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_27is_contextual(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_26is_contextual[] = "Return whether environment is contextual\n\n        Returns\n        -------\n        contextual : bool\n            whether this environment is contextual\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_27is_contextual(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_contextual (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_26is_contextual(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_26is_contextual(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_contextual", 0);

  /* "bolero/wrapper/_wrapper.pyx":573
 *             whether this environment is contextual
 *         """
 *         return self.thisptr.isContextual()             # <<<<<<<<<<<<<<
 * 
 *     def request_context(self, context):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isContextual();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 573, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 573, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":565
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def is_contextual(self):             # <<<<<<<<<<<<<<
 *         """Return whether environment is contextual
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.is_contextual", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":575
 *         return self.thisptr.isContextual()
 * 
 *     def request_context(self, context):             # <<<<<<<<<<<<<<
 *         """Sets the context of the environment to the given one
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_29request_context(PyObject *__pyx_v_self, PyObject *__pyx_v_context); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_28request_context[] = "Sets the context of the environment to the given one\n\n        Parameters\n        ----------\n        context : array\n            the requested context\n\n        Returns\n        -------\n        contex : double*\n            the context the environment was set to\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_29request_context(PyObject *__pyx_v_self, PyObject *__pyx_v_context) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("request_context (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_28request_context(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_context));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_28request_context(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, PyObject *__pyx_v_context) {
  int __pyx_v_n_dims;
  double *__pyx_v_tmp_array;
  PyArrayObject *__pyx_v_context_out = 0;
  PyArrayObject *__pyx_v_context_in = 0;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_context_in;
  __Pyx_Buffer __pyx_pybuffer_context_in;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_context_out;
  __Pyx_Buffer __pyx_pybuffer_context_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  double *__pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  __Pyx_RefNannySetupContext("request_context", 0);
  __pyx_pybuffer_context_out.pybuffer.buf = NULL;
  __pyx_pybuffer_context_out.refcount = 0;
  __pyx_pybuffernd_context_out.data = NULL;
  __pyx_pybuffernd_context_out.rcbuffer = &__pyx_pybuffer_context_out;
  __pyx_pybuffer_context_in.pybuffer.buf = NULL;
  __pyx_pybuffer_context_in.refcount = 0;
  __pyx_pybuffernd_context_in.data = NULL;
  __pyx_pybuffernd_context_in.rcbuffer = &__pyx_pybuffer_context_in;

  /* "bolero/wrapper/_wrapper.pyx":588
 *             the context the environment was set to
 *         """
 *         cdef int n_dims = self.get_num_context_dims()             # <<<<<<<<<<<<<<
 *         cdef double *tmp_array
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_out  = np.ndarray(n_dims)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_context_dims); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 588, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_dims = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":590
 *         cdef int n_dims = self.get_num_context_dims()
 *         cdef double *tmp_array
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_out  = np.ndarray(n_dims)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_in  = np.ndarray(n_dims)
 *         context_in[:] = context
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_dims); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_context_out.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_context_out = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_context_out.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 590, __pyx_L1_error)
    } else {__pyx_pybuffernd_context_out.diminfo[0].strides = __pyx_pybuffernd_context_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_context_out.diminfo[0].shape = __pyx_pybuffernd_context_out.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_context_out = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":591
 *         cdef double *tmp_array
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_out  = np.ndarray(n_dims)
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_in  = np.ndarray(n_dims)             # <<<<<<<<<<<<<<
 *         context_in[:] = context
 *         tmp_array = self.thisptr.request_context(&context_in[0], n_dims)
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_n_dims); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 591, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_context_in.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_context_in = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_context_in.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 591, __pyx_L1_error)
    } else {__pyx_pybuffernd_context_in.diminfo[0].strides = __pyx_pybuffernd_context_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_context_in.diminfo[0].shape = __pyx_pybuffernd_context_in.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_context_in = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":592
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_out  = np.ndarray(n_dims)
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_in  = np.ndarray(n_dims)
 *         context_in[:] = context             # <<<<<<<<<<<<<<
 *         tmp_array = self.thisptr.request_context(&context_in[0], n_dims)
 *         for i in range(n_dims):
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_context_in), __pyx_slice__5, __pyx_v_context) < 0)) __PYX_ERR(1, 592, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":593
 *         cdef np.ndarray[double, ndim=1, mode="c"] context_in  = np.ndarray(n_dims)
 *         context_in[:] = context
 *         tmp_array = self.thisptr.request_context(&context_in[0], n_dims)             # <<<<<<<<<<<<<<
 *         for i in range(n_dims):
 *             context_out[i] = tmp_array[i]
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_context_in.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_context_in.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 593, __pyx_L1_error)
  }
  try {
    __pyx_t_6 = __pyx_v_self->thisptr->request_context((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_context_in.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_context_in.diminfo[0].strides))), __pyx_v_n_dims);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 593, __pyx_L1_error)
  }
  __pyx_v_tmp_array = __pyx_t_6;

  /* "bolero/wrapper/_wrapper.pyx":594
 *         context_in[:] = context
 *         tmp_array = self.thisptr.request_context(&context_in[0], n_dims)
 *         for i in range(n_dims):             # <<<<<<<<<<<<<<
 *             context_out[i] = tmp_array[i]
 *         return context_out
 */
  __pyx_t_4 = __pyx_v_n_dims;
  __pyx_t_7 = __pyx_t_4;
  for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
    __pyx_v_i = __pyx_t_8;

    /* "bolero/wrapper/_wrapper.pyx":595
 *         tmp_array = self.thisptr.request_context(&context_in[0], n_dims)
 *         for i in range(n_dims):
 *             context_out[i] = tmp_array[i]             # <<<<<<<<<<<<<<
 *         return context_out
 * 
 */
    __pyx_t_9 = __pyx_v_i;
    __pyx_t_10 = -1;
    if (__pyx_t_9 < 0) {
      __pyx_t_9 += __pyx_pybuffernd_context_out.diminfo[0].shape;
      if (unlikely(__pyx_t_9 < 0)) __pyx_t_10 = 0;
    } else if (unlikely(__pyx_t_9 >= __pyx_pybuffernd_context_out.diminfo[0].shape)) __pyx_t_10 = 0;
    if (unlikely(__pyx_t_10 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_10);
      __PYX_ERR(1, 595, __pyx_L1_error)
    }
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_context_out.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_context_out.diminfo[0].strides) = (__pyx_v_tmp_array[__pyx_v_i]);
  }

  /* "bolero/wrapper/_wrapper.pyx":596
 *         for i in range(n_dims):
 *             context_out[i] = tmp_array[i]
 *         return context_out             # <<<<<<<<<<<<<<
 * 
 *     def get_num_context_dims(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_context_out));
  __pyx_r = ((PyObject *)__pyx_v_context_out);
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":575
 *         return self.thisptr.isContextual()
 * 
 *     def request_context(self, context):             # <<<<<<<<<<<<<<
 *         """Sets the context of the environment to the given one
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_context_in.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_context_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.request_context", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_context_in.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_context_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_context_out);
  __Pyx_XDECREF((PyObject *)__pyx_v_context_in);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":598
 *         return context_out
 * 
 *     def get_num_context_dims(self):             # <<<<<<<<<<<<<<
 *         """returns the count of the context dimensions
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_31get_num_context_dims(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_30get_num_context_dims[] = "returns the count of the context dimensions\n\n        Returns\n        -------\n        contex_dimensions : int\n            the dimension of the context\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_31get_num_context_dims(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_context_dims (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_30get_num_context_dims(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_30get_num_context_dims(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_context_dims", 0);

  /* "bolero/wrapper/_wrapper.pyx":606
 *             the dimension of the context
 *         """
 *         return self.thisptr.get_num_context_dims()             # <<<<<<<<<<<<<<
 * 
 * cdef class CppParameterizedEnvironment:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->get_num_context_dims();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 606, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":598
 *         return context_out
 * 
 *     def get_num_context_dims(self):             # <<<<<<<<<<<<<<
 *         """returns the count of the context dimensions
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.get_num_context_dims", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_32__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_32__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_34__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_34__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppContextualEnvironment.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":611
 *     cdef ParameterizedEnvironment *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *         self.config_yaml = ""
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":612
 * 
 *     def __cinit__(self):
 *         self.thisptr = NULL             # <<<<<<<<<<<<<<
 *         self.config_yaml = ""
 * 
 */
  __pyx_v_self->thisptr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":613
 *     def __cinit__(self):
 *         self.thisptr = NULL
 *         self.config_yaml = ""             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_config_yaml, __pyx_kp_s__4) < 0) __PYX_ERR(1, 613, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":611
 *     cdef ParameterizedEnvironment *thisptr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL
 *         self.config_yaml = ""
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":615
 *         self.config_yaml = ""
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

/* Python wrapper */
static void __pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_2__dealloc__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_2__dealloc__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "bolero/wrapper/_wrapper.pyx":616
 * 
 *     def __dealloc__(self):
 *         del self.thisptr             # <<<<<<<<<<<<<<
 * 
 *     def initialize_yaml(self, config_yaml):
 */
  delete __pyx_v_self->thisptr;

  /* "bolero/wrapper/_wrapper.pyx":615
 *         self.config_yaml = ""
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.thisptr
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "bolero/wrapper/_wrapper.pyx":618
 *         del self.thisptr
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_5initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_5initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_4initialize_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_config_yaml));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_4initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("initialize_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":619
 * 
 *     def initialize_yaml(self, config_yaml):
 *         self.config_yaml = get_string(config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def init(self):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_yaml))||((__pyx_v_config_yaml) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_yaml)->tp_name), 0))) __PYX_ERR(1, 619, __pyx_L1_error)
  __pyx_t_1 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_yaml))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 619, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_config_yaml, __pyx_t_1) < 0) __PYX_ERR(1, 619, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":618
 *         del self.thisptr
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.initialize_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":621
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self):             # <<<<<<<<<<<<<<
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_7init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_6init[] = "Initialize environment.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_7init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_6init(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_6init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  __Pyx_RefNannySetupContext("init", 0);

  /* "bolero/wrapper/_wrapper.pyx":623
 *     def init(self):
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def reset(self):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_config_yaml); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 623, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_convert_string_from_py_std__in_string(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 623, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  try {
    __pyx_v_self->thisptr->init(__pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 623, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":621
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self):             # <<<<<<<<<<<<<<
 *         """Initialize environment."""
 *         self.thisptr.init(self.config_yaml)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":625
 *         self.thisptr.init(self.config_yaml)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset state of the environment."""
 *         self.thisptr.reset()
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_8reset[] = "Reset state of the environment.";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_9reset(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_8reset(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_8reset(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("reset", 0);

  /* "bolero/wrapper/_wrapper.pyx":627
 *     def reset(self):
 *         """Reset state of the environment."""
 *         self.thisptr.reset()             # <<<<<<<<<<<<<<
 * 
 *     def get_num_inputs(self):
 */
  try {
    __pyx_v_self->thisptr->reset();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 627, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":625
 *         self.thisptr.init(self.config_yaml)
 * 
 *     def reset(self):             # <<<<<<<<<<<<<<
 *         """Reset state of the environment."""
 *         self.thisptr.reset()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.reset", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":629
 *         self.thisptr.reset()
 * 
 *     def get_num_inputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment inputs.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_11get_num_inputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_10get_num_inputs[] = "Get number of environment inputs.\n\n        Parameters\n        ----------\n        n : int\n            number of environment inputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_11get_num_inputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_10get_num_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_10get_num_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_inputs", 0);

  /* "bolero/wrapper/_wrapper.pyx":637
 *             number of environment inputs
 *         """
 *         return self.thisptr.getNumInputs()             # <<<<<<<<<<<<<<
 * 
 *     def get_num_outputs(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->getNumInputs();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 637, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":629
 *         self.thisptr.reset()
 * 
 *     def get_num_inputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment inputs.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.get_num_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":639
 *         return self.thisptr.getNumInputs()
 * 
 *     def get_num_outputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment outputs.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_13get_num_outputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_12get_num_outputs[] = "Get number of environment outputs.\n\n        Parameters\n        ----------\n        n : int\n            number of environment outputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_13get_num_outputs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_12get_num_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_12get_num_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("get_num_outputs", 0);

  /* "bolero/wrapper/_wrapper.pyx":647
 *             number of environment outputs
 *         """
 *         return self.thisptr.getNumOutputs()             # <<<<<<<<<<<<<<
 * 
 *     def get_outputs(self, values):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->getNumOutputs();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 647, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":639
 *         return self.thisptr.getNumInputs()
 * 
 *     def get_num_outputs(self):             # <<<<<<<<<<<<<<
 *         """Get number of environment outputs.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.get_num_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":649
 *         return self.thisptr.getNumOutputs()
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get environment outputs, e.g. state of the environment.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_15get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_14get_outputs[] = "Get environment outputs, e.g. state of the environment.\n\n        Parameters\n        ----------\n        values : array\n            outputs for the environment, will be modified\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_15get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_14get_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_14get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_outputs;
  PyArrayObject *__pyx_v_outputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_outputs;
  __Pyx_Buffer __pyx_pybuffer_outputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("get_outputs", 0);
  __pyx_pybuffer_outputs.pybuffer.buf = NULL;
  __pyx_pybuffer_outputs.refcount = 0;
  __pyx_pybuffernd_outputs.data = NULL;
  __pyx_pybuffernd_outputs.rcbuffer = &__pyx_pybuffer_outputs;

  /* "bolero/wrapper/_wrapper.pyx":657
 *             outputs for the environment, will be modified
 *         """
 *         cdef int n_outputs = self.get_num_outputs()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_outputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 657, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_outputs = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":658
 *         """
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)             # <<<<<<<<<<<<<<
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 *         values[:] = outputs
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_outputs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 658, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_outputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 658, __pyx_L1_error)
    } else {__pyx_pybuffernd_outputs.diminfo[0].strides = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_outputs.diminfo[0].shape = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_outputs = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":659
 *         cdef int n_outputs = self.get_num_outputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)             # <<<<<<<<<<<<<<
 *         values[:] = outputs
 * 
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_outputs.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_outputs.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 659, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->getOutputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_outputs.diminfo[0].strides))), __pyx_v_n_outputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 659, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":660
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 *         values[:] = outputs             # <<<<<<<<<<<<<<
 * 
 *     def set_inputs(self, values):
 */
  if (__Pyx_PyObject_SetSlice(__pyx_v_values, ((PyObject *)__pyx_v_outputs), 0, 0, NULL, NULL, &__pyx_slice__5, 0, 0, 1) < 0) __PYX_ERR(1, 660, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":649
 *         return self.thisptr.getNumOutputs()
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get environment outputs, e.g. state of the environment.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.get_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_outputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":662
 *         values[:] = outputs
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set environment inputs, e.g. next action.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_17set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_16set_inputs[] = "Set environment inputs, e.g. next action.\n\n        Parameters\n        ----------\n        values : array,\n            input of the environment\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_17set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_16set_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_16set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_inputs;
  PyArrayObject *__pyx_v_inputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_inputs;
  __Pyx_Buffer __pyx_pybuffer_inputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("set_inputs", 0);
  __pyx_pybuffer_inputs.pybuffer.buf = NULL;
  __pyx_pybuffer_inputs.refcount = 0;
  __pyx_pybuffernd_inputs.data = NULL;
  __pyx_pybuffernd_inputs.rcbuffer = &__pyx_pybuffer_inputs;

  /* "bolero/wrapper/_wrapper.pyx":670
 *             input of the environment
 *         """
 *         cdef int n_inputs = self.get_num_inputs()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_inputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 670, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 670, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_inputs = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":671
 *         """
 *         cdef int n_inputs = self.get_num_inputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)             # <<<<<<<<<<<<<<
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_inputs); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_inputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 671, __pyx_L1_error)
    } else {__pyx_pybuffernd_inputs.diminfo[0].strides = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_inputs.diminfo[0].shape = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_inputs = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":672
 *         cdef int n_inputs = self.get_num_inputs()
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values             # <<<<<<<<<<<<<<
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_inputs), __pyx_slice__5, __pyx_v_values) < 0)) __PYX_ERR(1, 672, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":673
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)             # <<<<<<<<<<<<<<
 * 
 *     def step_action(self):
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_inputs.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_inputs.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 673, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->setInputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_inputs.diminfo[0].strides))), __pyx_v_n_inputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 673, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":662
 *         values[:] = outputs
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set environment inputs, e.g. next action.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.set_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_inputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":675
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def step_action(self):             # <<<<<<<<<<<<<<
 *         """Take a step in the environment.
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_19step_action(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_18step_action[] = "Take a step in the environment.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_19step_action(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step_action (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_18step_action(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_18step_action(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step_action", 0);

  /* "bolero/wrapper/_wrapper.pyx":678
 *         """Take a step in the environment.
 *         """
 *         self.thisptr.stepAction()             # <<<<<<<<<<<<<<
 * 
 *     def is_evaluation_done(self):
 */
  try {
    __pyx_v_self->thisptr->stepAction();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 678, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":675
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def step_action(self):             # <<<<<<<<<<<<<<
 *         """Take a step in the environment.
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.step_action", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":680
 *         self.thisptr.stepAction()
 * 
 *     def is_evaluation_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the evaluation of the behavior is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_21is_evaluation_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_20is_evaluation_done[] = "Check if the evaluation of the behavior is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the evaluation finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_21is_evaluation_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_evaluation_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_20is_evaluation_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_20is_evaluation_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_evaluation_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":688
 *             Is the evaluation finished?
 *         """
 *         return self.thisptr.isEvaluationDone()             # <<<<<<<<<<<<<<
 * 
 *     def get_feedback(self, feedback):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isEvaluationDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 688, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":680
 *         self.thisptr.stepAction()
 * 
 *     def is_evaluation_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the evaluation of the behavior is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.is_evaluation_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":690
 *         return self.thisptr.isEvaluationDone()
 * 
 *     def get_feedback(self, feedback):             # <<<<<<<<<<<<<<
 *         """Get the feedbacks for the last evaluation period.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_23get_feedback(PyObject *__pyx_v_self, PyObject *__pyx_v_feedback); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_22get_feedback[] = "Get the feedbacks for the last evaluation period.\n\n        Parameters\n        ----------\n        feedback : array\n            feedback vector, will be modified\n\n        Returns\n        -------\n        success : bool\n            Has the feedback vector been filled?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_23get_feedback(PyObject *__pyx_v_self, PyObject *__pyx_v_feedback) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_feedback (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_22get_feedback(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_feedback));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_22get_feedback(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_feedback) {
  PyArrayObject *__pyx_v_tmp = 0;
  int __pyx_v_n_feedbacks;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_tmp;
  __Pyx_Buffer __pyx_pybuffer_tmp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_RefNannySetupContext("get_feedback", 0);
  __pyx_pybuffer_tmp.pybuffer.buf = NULL;
  __pyx_pybuffer_tmp.refcount = 0;
  __pyx_pybuffernd_tmp.data = NULL;
  __pyx_pybuffernd_tmp.rcbuffer = &__pyx_pybuffer_tmp;

  /* "bolero/wrapper/_wrapper.pyx":703
 *             Has the feedback vector been filled?
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] tmp = np.ndarray(1000)             # <<<<<<<<<<<<<<
 *         n_feedbacks = self.thisptr.getFeedback(&tmp[0])
 *         feedback[:n_feedbacks] = tmp[:n_feedbacks]
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 703, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_tmp.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_tmp = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_tmp.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 703, __pyx_L1_error)
    } else {__pyx_pybuffernd_tmp.diminfo[0].strides = __pyx_pybuffernd_tmp.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_tmp.diminfo[0].shape = __pyx_pybuffernd_tmp.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_tmp = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":704
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] tmp = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&tmp[0])             # <<<<<<<<<<<<<<
 *         feedback[:n_feedbacks] = tmp[:n_feedbacks]
 *         return n_feedbacks
 */
  __pyx_t_2 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_pybuffernd_tmp.diminfo[0].shape;
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_2 >= __pyx_pybuffernd_tmp.diminfo[0].shape)) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 704, __pyx_L1_error)
  }
  try {
    __pyx_t_3 = __pyx_v_self->thisptr->getFeedback((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_tmp.rcbuffer->pybuffer.buf, __pyx_t_2, __pyx_pybuffernd_tmp.diminfo[0].strides))));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 704, __pyx_L1_error)
  }
  __pyx_v_n_feedbacks = __pyx_t_3;

  /* "bolero/wrapper/_wrapper.pyx":705
 *         cdef np.ndarray[double, ndim=1, mode="c"] tmp = np.ndarray(1000)
 *         n_feedbacks = self.thisptr.getFeedback(&tmp[0])
 *         feedback[:n_feedbacks] = tmp[:n_feedbacks]             # <<<<<<<<<<<<<<
 *         return n_feedbacks
 * 
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_feedbacks); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PySlice_New(Py_None, __pyx_t_1, Py_None); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_tmp), __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_PyObject_SetSlice(__pyx_v_feedback, __pyx_t_1, 0, __pyx_v_n_feedbacks, NULL, NULL, NULL, 0, 1, 1) < 0) __PYX_ERR(1, 705, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":706
 *         n_feedbacks = self.thisptr.getFeedback(&tmp[0])
 *         feedback[:n_feedbacks] = tmp[:n_feedbacks]
 *         return n_feedbacks             # <<<<<<<<<<<<<<
 * 
 *     def is_behavior_learning_done(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_feedbacks); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 706, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":690
 *         return self.thisptr.isEvaluationDone()
 * 
 *     def get_feedback(self, feedback):             # <<<<<<<<<<<<<<
 *         """Get the feedbacks for the last evaluation period.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tmp.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.get_feedback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_tmp.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_tmp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":708
 *         return n_feedbacks
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_25is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_24is_behavior_learning_done[] = "Check if the behavior learning is finished.\n\n        Returns\n        -------\n        finished : bool\n            Is the learning of a behavior finished?\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_25is_behavior_learning_done(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_behavior_learning_done (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_24is_behavior_learning_done(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_24is_behavior_learning_done(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("is_behavior_learning_done", 0);

  /* "bolero/wrapper/_wrapper.pyx":716
 *             Is the learning of a behavior finished?
 *         """
 *         return self.thisptr.isBehaviorLearningDone()             # <<<<<<<<<<<<<<
 * 
 *     def get_parameters(self, paramters):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->isBehaviorLearningDone();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 716, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 716, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":708
 *         return n_feedbacks
 * 
 *     def is_behavior_learning_done(self):             # <<<<<<<<<<<<<<
 *         """Check if the behavior learning is finished.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.is_behavior_learning_done", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":718
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def get_parameters(self, paramters):             # <<<<<<<<<<<<<<
 *         """Get the parameters of the environment
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_27get_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_paramters); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_26get_parameters[] = "Get the parameters of the environment\n\n        Parameters\n        ----------\n        paramters : array\n            the current paramters of the environment\n\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_27get_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_paramters) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_26get_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_paramters));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_26get_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_paramters) {
  int __pyx_v_n_params;
  PyArrayObject *__pyx_v_parameters_out = 0;
  CYTHON_UNUSED PyObject *__pyx_v_parameters = NULL;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_parameters_out;
  __Pyx_Buffer __pyx_pybuffer_parameters_out;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  __Pyx_RefNannySetupContext("get_parameters", 0);
  __pyx_pybuffer_parameters_out.pybuffer.buf = NULL;
  __pyx_pybuffer_parameters_out.refcount = 0;
  __pyx_pybuffernd_parameters_out.data = NULL;
  __pyx_pybuffernd_parameters_out.rcbuffer = &__pyx_pybuffer_parameters_out;

  /* "bolero/wrapper/_wrapper.pyx":727
 * 
 *         """
 *         cdef int n_params = self.get_num_parameters()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_out  = np.ndarray(n_params)
 *         self.thisptr.getParameters(&parameters_out[0], n_params)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_parameters); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 727, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_params = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":728
 *         """
 *         cdef int n_params = self.get_num_parameters()
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_out  = np.ndarray(n_params)             # <<<<<<<<<<<<<<
 *         self.thisptr.getParameters(&parameters_out[0], n_params)
 *         parameters = np.ndarray(n_params)
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_params); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 728, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_parameters_out.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_parameters_out = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_parameters_out.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 728, __pyx_L1_error)
    } else {__pyx_pybuffernd_parameters_out.diminfo[0].strides = __pyx_pybuffernd_parameters_out.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_parameters_out.diminfo[0].shape = __pyx_pybuffernd_parameters_out.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_parameters_out = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":729
 *         cdef int n_params = self.get_num_parameters()
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_out  = np.ndarray(n_params)
 *         self.thisptr.getParameters(&parameters_out[0], n_params)             # <<<<<<<<<<<<<<
 *         parameters = np.ndarray(n_params)
 *         for i in range(n_params):
 */
  __pyx_t_5 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_5 < 0) {
    __pyx_t_5 += __pyx_pybuffernd_parameters_out.diminfo[0].shape;
    if (unlikely(__pyx_t_5 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_5 >= __pyx_pybuffernd_parameters_out.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 729, __pyx_L1_error)
  }
  __pyx_v_self->thisptr->getParameters((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_parameters_out.rcbuffer->pybuffer.buf, __pyx_t_5, __pyx_pybuffernd_parameters_out.diminfo[0].strides))), __pyx_v_n_params);

  /* "bolero/wrapper/_wrapper.pyx":730
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_out  = np.ndarray(n_params)
 *         self.thisptr.getParameters(&parameters_out[0], n_params)
 *         parameters = np.ndarray(n_params)             # <<<<<<<<<<<<<<
 *         for i in range(n_params):
 *             paramters[i] = parameters_out[i]
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_n_params); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_parameters = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":731
 *         self.thisptr.getParameters(&parameters_out[0], n_params)
 *         parameters = np.ndarray(n_params)
 *         for i in range(n_params):             # <<<<<<<<<<<<<<
 *             paramters[i] = parameters_out[i]
 * 
 */
  __pyx_t_4 = __pyx_v_n_params;
  __pyx_t_6 = __pyx_t_4;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
    __pyx_v_i = __pyx_t_7;

    /* "bolero/wrapper/_wrapper.pyx":732
 *         parameters = np.ndarray(n_params)
 *         for i in range(n_params):
 *             paramters[i] = parameters_out[i]             # <<<<<<<<<<<<<<
 * 
 *     def set_parameters(self, parameters):
 */
    __pyx_t_8 = __pyx_v_i;
    __pyx_t_9 = -1;
    if (__pyx_t_8 < 0) {
      __pyx_t_8 += __pyx_pybuffernd_parameters_out.diminfo[0].shape;
      if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 0;
    } else if (unlikely(__pyx_t_8 >= __pyx_pybuffernd_parameters_out.diminfo[0].shape)) __pyx_t_9 = 0;
    if (unlikely(__pyx_t_9 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_9);
      __PYX_ERR(1, 732, __pyx_L1_error)
    }
    __pyx_t_1 = PyFloat_FromDouble((*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_parameters_out.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_parameters_out.diminfo[0].strides))); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 732, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__Pyx_SetItemInt(__pyx_v_paramters, __pyx_v_i, __pyx_t_1, int, 1, __Pyx_PyInt_From_int, 0, 1, 1) < 0)) __PYX_ERR(1, 732, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "bolero/wrapper/_wrapper.pyx":718
 *         return self.thisptr.isBehaviorLearningDone()
 * 
 *     def get_parameters(self, paramters):             # <<<<<<<<<<<<<<
 *         """Get the parameters of the environment
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_parameters_out.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.get_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_parameters_out.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_parameters_out);
  __Pyx_XDECREF(__pyx_v_parameters);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":734
 *             paramters[i] = parameters_out[i]
 * 
 *     def set_parameters(self, parameters):             # <<<<<<<<<<<<<<
 *         """set the parameters of the environment to the given one
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_29set_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_parameters); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_28set_parameters[] = "set the parameters of the environment to the given one\n\n        Parameters\n        ----------\n        paramters : array\n            the requested paramters\n\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_29set_parameters(PyObject *__pyx_v_self, PyObject *__pyx_v_parameters) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_28set_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v_parameters));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_28set_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, PyObject *__pyx_v_parameters) {
  int __pyx_v_n_params;
  PyArrayObject *__pyx_v_parameters_in = 0;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_parameters_in;
  __Pyx_Buffer __pyx_pybuffer_parameters_in;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  double __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  __Pyx_RefNannySetupContext("set_parameters", 0);
  __pyx_pybuffer_parameters_in.pybuffer.buf = NULL;
  __pyx_pybuffer_parameters_in.refcount = 0;
  __pyx_pybuffernd_parameters_in.data = NULL;
  __pyx_pybuffernd_parameters_in.rcbuffer = &__pyx_pybuffer_parameters_in;

  /* "bolero/wrapper/_wrapper.pyx":743
 * 
 *         """
 *         cdef int n_params = self.get_num_parameters()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_in  = np.ndarray(n_params)
 *         for i in range(n_params):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_num_parameters); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 743, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_n_params = __pyx_t_4;

  /* "bolero/wrapper/_wrapper.pyx":744
 *         """
 *         cdef int n_params = self.get_num_parameters()
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_in  = np.ndarray(n_params)             # <<<<<<<<<<<<<<
 *         for i in range(n_params):
 *             parameters_in[i] = parameters[i]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_n_params); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_parameters_in.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_2), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_parameters_in = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_parameters_in.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 744, __pyx_L1_error)
    } else {__pyx_pybuffernd_parameters_in.diminfo[0].strides = __pyx_pybuffernd_parameters_in.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_parameters_in.diminfo[0].shape = __pyx_pybuffernd_parameters_in.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_parameters_in = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":745
 *         cdef int n_params = self.get_num_parameters()
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_in  = np.ndarray(n_params)
 *         for i in range(n_params):             # <<<<<<<<<<<<<<
 *             parameters_in[i] = parameters[i]
 *         self.thisptr.setParameters(&parameters_in[0], n_params)
 */
  __pyx_t_4 = __pyx_v_n_params;
  __pyx_t_5 = __pyx_t_4;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "bolero/wrapper/_wrapper.pyx":746
 *         cdef np.ndarray[double, ndim=1, mode="c"] parameters_in  = np.ndarray(n_params)
 *         for i in range(n_params):
 *             parameters_in[i] = parameters[i]             # <<<<<<<<<<<<<<
 *         self.thisptr.setParameters(&parameters_in[0], n_params)
 * 
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_parameters, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(1, 746, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_8 = __pyx_v_i;
    __pyx_t_9 = -1;
    if (__pyx_t_8 < 0) {
      __pyx_t_8 += __pyx_pybuffernd_parameters_in.diminfo[0].shape;
      if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 0;
    } else if (unlikely(__pyx_t_8 >= __pyx_pybuffernd_parameters_in.diminfo[0].shape)) __pyx_t_9 = 0;
    if (unlikely(__pyx_t_9 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_9);
      __PYX_ERR(1, 746, __pyx_L1_error)
    }
    *__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_parameters_in.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_parameters_in.diminfo[0].strides) = __pyx_t_7;
  }

  /* "bolero/wrapper/_wrapper.pyx":747
 *         for i in range(n_params):
 *             parameters_in[i] = parameters[i]
 *         self.thisptr.setParameters(&parameters_in[0], n_params)             # <<<<<<<<<<<<<<
 * 
 *     def get_num_parameters(self):
 */
  __pyx_t_10 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_pybuffernd_parameters_in.diminfo[0].shape;
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_10 >= __pyx_pybuffernd_parameters_in.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 747, __pyx_L1_error)
  }
  __pyx_v_self->thisptr->setParameters((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_parameters_in.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_parameters_in.diminfo[0].strides))), __pyx_v_n_params);

  /* "bolero/wrapper/_wrapper.pyx":734
 *             paramters[i] = parameters_out[i]
 * 
 *     def set_parameters(self, parameters):             # <<<<<<<<<<<<<<
 *         """set the parameters of the environment to the given one
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_parameters_in.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.set_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_parameters_in.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_parameters_in);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":749
 *         self.thisptr.setParameters(&parameters_in[0], n_params)
 * 
 *     def get_num_parameters(self):             # <<<<<<<<<<<<<<
 *         """returns the count of the context dimensions
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_31get_num_parameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_30get_num_parameters[] = "returns the count of the context dimensions\n\n        Returns\n        -------\n        contex_dimensions : int\n            the dimension of the context\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_31get_num_parameters(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_parameters (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_30get_num_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_30get_num_parameters(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_num_parameters", 0);

  /* "bolero/wrapper/_wrapper.pyx":757
 *             the dimension of the context
 *         """
 *         return self.thisptr.getNumParameters()             # <<<<<<<<<<<<<<
 * 
 * cdef class CppBehavior:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->thisptr->getNumParameters()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 757, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":749
 *         self.thisptr.setParameters(&parameters_in[0], n_params)
 * 
 *     def get_num_parameters(self):             # <<<<<<<<<<<<<<
 *         """returns the count of the context dimensions
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.get_num_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_33__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_32__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_32__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_35__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_34__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_34__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppParameterizedEnvironment.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":763
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":764
 * 
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer             # <<<<<<<<<<<<<<
 *         self.config_yaml = ""
 * 
 */
  __pyx_v_self->thisptr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":765
 *     def __cinit__(self):
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""             # <<<<<<<<<<<<<<
 * 
 *     def initialize_yaml(self, config_yaml):
 */
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_kp_b__4); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 765, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_t_1;

  /* "bolero/wrapper/_wrapper.pyx":763
 *     cdef string config_yaml
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.thisptr = NULL  # The BLLoader will delete this pointer
 *         self.config_yaml = ""
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":767
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_3initialize_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_2initialize_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self), ((PyObject *)__pyx_v_config_yaml));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_2initialize_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_config_yaml) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":768
 * 
 *     def initialize_yaml(self, config_yaml):
 *         self.config_yaml = get_string(config_yaml)             # <<<<<<<<<<<<<<
 * 
 *     def init(self, n_inputs, n_outputs):
 */
  if (!(likely(PyString_CheckExact(__pyx_v_config_yaml))||((__pyx_v_config_yaml) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "str", Py_TYPE(__pyx_v_config_yaml)->tp_name), 0))) __PYX_ERR(1, 768, __pyx_L1_error)
  __pyx_v_self->config_yaml = __pyx_f_6bolero_7wrapper_8_wrapper_get_string(((PyObject*)__pyx_v_config_yaml));

  /* "bolero/wrapper/_wrapper.pyx":767
 *         self.config_yaml = ""
 * 
 *     def initialize_yaml(self, config_yaml):             # <<<<<<<<<<<<<<
 *         self.config_yaml = get_string(config_yaml)
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.initialize_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":770
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self, n_inputs, n_outputs):             # <<<<<<<<<<<<<<
 *         """Initialize the behavior.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_5init(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_4init[] = "Initialize the behavior.\n\n        Parameters\n        ----------\n        n_inputs : int\n            number of inputs\n\n        n_outputs : int\n            number of outputs\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_5init(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_n_inputs = 0;
  PyObject *__pyx_v_n_outputs = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("init (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n_inputs,&__pyx_n_s_n_outputs,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_inputs)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_n_outputs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("init", 1, 2, 2, 1); __PYX_ERR(1, 770, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "init") < 0)) __PYX_ERR(1, 770, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_n_inputs = values[0];
    __pyx_v_n_outputs = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("init", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 770, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_4init(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self), __pyx_v_n_inputs, __pyx_v_n_outputs);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_4init(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_n_inputs, PyObject *__pyx_v_n_outputs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  __Pyx_RefNannySetupContext("init", 0);

  /* "bolero/wrapper/_wrapper.pyx":781
 *             number of outputs
 *         """
 *         self.thisptr.init(n_inputs, n_outputs)             # <<<<<<<<<<<<<<
 * 
 *     def set_meta_parameters(self, keys, meta_parameters):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_n_inputs); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 781, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_n_outputs); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 781, __pyx_L1_error)
  try {
    __pyx_v_self->thisptr->init(__pyx_t_1, __pyx_t_2);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 781, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":770
 *         self.config_yaml = get_string(config_yaml)
 * 
 *     def init(self, n_inputs, n_outputs):             # <<<<<<<<<<<<<<
 *         """Initialize the behavior.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":783
 *         self.thisptr.init(n_inputs, n_outputs)
 * 
 *     def set_meta_parameters(self, keys, meta_parameters):             # <<<<<<<<<<<<<<
 *         """Set meta-parameters.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_7set_meta_parameters(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_6set_meta_parameters[] = "Set meta-parameters.\n\n        Meta-parameters could be the goal, obstacles, ...\n\n        Parameters\n        ----------\n        keys : list of string\n            names of meta-parameters\n        meta_parameters : list of float\n            values of meta-parameters\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_7set_meta_parameters(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_keys = 0;
  CYTHON_UNUSED PyObject *__pyx_v_meta_parameters = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_meta_parameters (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_keys,&__pyx_n_s_meta_parameters,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_keys)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_meta_parameters)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_meta_parameters", 1, 2, 2, 1); __PYX_ERR(1, 783, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_meta_parameters") < 0)) __PYX_ERR(1, 783, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_keys = values[0];
    __pyx_v_meta_parameters = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_meta_parameters", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(1, 783, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.set_meta_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_6set_meta_parameters(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self), __pyx_v_keys, __pyx_v_meta_parameters);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_6set_meta_parameters(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_keys, CYTHON_UNUSED PyObject *__pyx_v_meta_parameters) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("set_meta_parameters", 0);

  /* "bolero/wrapper/_wrapper.pyx":795
 *             values of meta-parameters
 *         """
 *         raise NotImplementedError("Meta parameters are not available in C++ behavior!")             # <<<<<<<<<<<<<<
 * 
 *     def set_inputs(self, values):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(1, 795, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":783
 *         self.thisptr.init(n_inputs, n_outputs)
 * 
 *     def set_meta_parameters(self, keys, meta_parameters):             # <<<<<<<<<<<<<<
 *         """Set meta-parameters.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.set_meta_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":797
 *         raise NotImplementedError("Meta parameters are not available in C++ behavior!")
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set input for the next step.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_9set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_8set_inputs[] = "Set input for the next step.\n\n        Parameters\n        ----------\n        inputs : array-like, shape = [num_inputs,]\n            inputs, e.g. current state of the system\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_9set_inputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_inputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_8set_inputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_8set_inputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_inputs;
  PyArrayObject *__pyx_v_inputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_inputs;
  __Pyx_Buffer __pyx_pybuffer_inputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  __Pyx_RefNannySetupContext("set_inputs", 0);
  __pyx_pybuffer_inputs.pybuffer.buf = NULL;
  __pyx_pybuffer_inputs.refcount = 0;
  __pyx_pybuffernd_inputs.data = NULL;
  __pyx_pybuffernd_inputs.rcbuffer = &__pyx_pybuffer_inputs;

  /* "bolero/wrapper/_wrapper.pyx":805
 *             inputs, e.g. current state of the system
 *         """
 *         cdef int n_inputs = values.shape[0]             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_values, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 805, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_n_inputs = __pyx_t_3;

  /* "bolero/wrapper/_wrapper.pyx":806
 *         """
 *         cdef int n_inputs = values.shape[0]
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)             # <<<<<<<<<<<<<<
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_n_inputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 806, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_inputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 806, __pyx_L1_error)
    } else {__pyx_pybuffernd_inputs.diminfo[0].strides = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_inputs.diminfo[0].shape = __pyx_pybuffernd_inputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_inputs = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":807
 *         cdef int n_inputs = values.shape[0]
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values             # <<<<<<<<<<<<<<
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 */
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_inputs), __pyx_slice__5, __pyx_v_values) < 0)) __PYX_ERR(1, 807, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":808
 *         cdef np.ndarray[double, ndim=1, mode="c"] inputs = np.ndarray(n_inputs)
 *         inputs[:] = values
 *         self.thisptr.setInputs(&inputs[0], n_inputs)             # <<<<<<<<<<<<<<
 * 
 *     def get_outputs(self, values):
 */
  __pyx_t_4 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_inputs.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_inputs.diminfo[0].shape)) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 808, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->setInputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_inputs.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_inputs.diminfo[0].strides))), __pyx_v_n_inputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 808, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":797
 *         raise NotImplementedError("Meta parameters are not available in C++ behavior!")
 * 
 *     def set_inputs(self, values):             # <<<<<<<<<<<<<<
 *         """Set input for the next step.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.set_inputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_inputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_inputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":810
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get outputs of the last step.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_11get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_10get_outputs[] = "Get outputs of the last step.\n\n        Parameters\n        ----------\n        outputs : array-like, shape = [num_outputs,]\n            outputs, e.g. next action, will be updated\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_11get_outputs(PyObject *__pyx_v_self, PyObject *__pyx_v_values) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_outputs (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_10get_outputs(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self), ((PyObject *)__pyx_v_values));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_10get_outputs(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, PyObject *__pyx_v_values) {
  int __pyx_v_n_outputs;
  PyArrayObject *__pyx_v_outputs = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_outputs;
  __Pyx_Buffer __pyx_pybuffer_outputs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  __Pyx_RefNannySetupContext("get_outputs", 0);
  __pyx_pybuffer_outputs.pybuffer.buf = NULL;
  __pyx_pybuffer_outputs.refcount = 0;
  __pyx_pybuffernd_outputs.data = NULL;
  __pyx_pybuffernd_outputs.rcbuffer = &__pyx_pybuffer_outputs;

  /* "bolero/wrapper/_wrapper.pyx":818
 *             outputs, e.g. next action, will be updated
 *         """
 *         cdef int n_outputs = values.shape[0]             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_values, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(1, 818, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_n_outputs = __pyx_t_3;

  /* "bolero/wrapper/_wrapper.pyx":819
 *         """
 *         cdef int n_outputs = values.shape[0]
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)             # <<<<<<<<<<<<<<
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 *         values[:] = outputs
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_n_outputs); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_5numpy_ndarray), __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 819, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer, (PyObject*)((PyArrayObject *)__pyx_t_1), &__Pyx_TypeInfo_double, PyBUF_FORMAT| PyBUF_C_CONTIGUOUS, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_outputs = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(1, 819, __pyx_L1_error)
    } else {__pyx_pybuffernd_outputs.diminfo[0].strides = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_outputs.diminfo[0].shape = __pyx_pybuffernd_outputs.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_v_outputs = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":820
 *         cdef int n_outputs = values.shape[0]
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)             # <<<<<<<<<<<<<<
 *         values[:] = outputs
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_pybuffernd_outputs.diminfo[0].shape;
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_pybuffernd_outputs.diminfo[0].shape)) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 820, __pyx_L1_error)
  }
  try {
    __pyx_v_self->thisptr->getOutputs((&(*__Pyx_BufPtrCContig1d(double *, __pyx_pybuffernd_outputs.rcbuffer->pybuffer.buf, __pyx_t_4, __pyx_pybuffernd_outputs.diminfo[0].strides))), __pyx_v_n_outputs);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 820, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":821
 *         cdef np.ndarray[double, ndim=1, mode="c"] outputs = np.ndarray(n_outputs)
 *         self.thisptr.getOutputs(&outputs[0], n_outputs)
 *         values[:] = outputs             # <<<<<<<<<<<<<<
 * 
 *     def step(self):
 */
  if (__Pyx_PyObject_SetSlice(__pyx_v_values, ((PyObject *)__pyx_v_outputs), 0, 0, NULL, NULL, &__pyx_slice__5, 0, 0, 1) < 0) __PYX_ERR(1, 821, __pyx_L1_error)

  /* "bolero/wrapper/_wrapper.pyx":810
 *         self.thisptr.setInputs(&inputs[0], n_inputs)
 * 
 *     def get_outputs(self, values):             # <<<<<<<<<<<<<<
 *         """Get outputs of the last step.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.get_outputs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_outputs.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_outputs);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":823
 *         values[:] = outputs
 * 
 *     def step(self):             # <<<<<<<<<<<<<<
 *         """Compute output for the received input.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_13step(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_12step[] = "Compute output for the received input.\n\n        Use the inputs and meta-parameters to compute the outputs.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_13step(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_12step(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_12step(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("step", 0);

  /* "bolero/wrapper/_wrapper.pyx":828
 *         Use the inputs and meta-parameters to compute the outputs.
 *         """
 *         self.thisptr.step()             # <<<<<<<<<<<<<<
 * 
 *     def can_step(self):
 */
  try {
    __pyx_v_self->thisptr->step();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 828, __pyx_L1_error)
  }

  /* "bolero/wrapper/_wrapper.pyx":823
 *         values[:] = outputs
 * 
 *     def step(self):             # <<<<<<<<<<<<<<
 *         """Compute output for the received input.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":830
 *         self.thisptr.step()
 * 
 *     def can_step(self):             # <<<<<<<<<<<<<<
 *         """Determine if stepping is possible.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_15can_step(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_14can_step[] = "Determine if stepping is possible.\n\n        If this method returns true step() can be called at least once more.\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_15can_step(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("can_step (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_14can_step(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_14can_step(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannySetupContext("can_step", 0);

  /* "bolero/wrapper/_wrapper.pyx":835
 *         If this method returns true step() can be called at least once more.
 *         """
 *         return self.thisptr.canStep()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->thisptr->canStep();
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 835, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 835, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":830
 *         self.thisptr.step()
 * 
 *     def can_step(self):             # <<<<<<<<<<<<<<
 *         """Determine if stepping is possible.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.can_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_16__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_18__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_11CppBehavior_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppBehavior.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":841
 *     cdef LoadableBehavior *behaviorPtr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.behaviorPtr = NULL  # The BLLoader will delete this pointer
 * 
 */

/* Python wrapper */
static int __pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 0))) return -1;
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior___cinit__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior___cinit__(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "bolero/wrapper/_wrapper.pyx":842
 * 
 *     def __cinit__(self):
 *         self.behaviorPtr = NULL  # The BLLoader will delete this pointer             # <<<<<<<<<<<<<<
 * 
 *     def initialize(self, initialConfigPath):
 */
  __pyx_v_self->behaviorPtr = NULL;

  /* "bolero/wrapper/_wrapper.pyx":841
 *     cdef LoadableBehavior *behaviorPtr
 * 
 *     def __cinit__(self):             # <<<<<<<<<<<<<<
 *         self.behaviorPtr = NULL  # The BLLoader will delete this pointer
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":844
 *         self.behaviorPtr = NULL  # The BLLoader will delete this pointer
 * 
 *     def initialize(self, initialConfigPath):             # <<<<<<<<<<<<<<
 *         """Initializes the Behavior using the specified config file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_initialConfigPath); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_2initialize[] = "Initializes the Behavior using the specified config file.\n\n        Initialization should be done only once. It is intended to set the\n        Behavior's template parameters.\n\n        The Behavior needs to be initialized before any other method can be called.\n\n        Returns\n        -------\n        success : bool\n            Whether the initialization worked or not\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_3initialize(PyObject *__pyx_v_self, PyObject *__pyx_v_initialConfigPath) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("initialize (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_2initialize(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_v_self), ((PyObject *)__pyx_v_initialConfigPath));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_2initialize(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, PyObject *__pyx_v_initialConfigPath) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("initialize", 0);

  /* "bolero/wrapper/_wrapper.pyx":857
 *             Whether the initialization worked or not
 *         """
 *         return self.behaviorPtr.initialize(initialConfigPath)             # <<<<<<<<<<<<<<
 * 
 *     def configure(self, configPath):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_initialConfigPath); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 857, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_v_self->behaviorPtr->initialize(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 857, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 857, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":844
 *         self.behaviorPtr = NULL  # The BLLoader will delete this pointer
 * 
 *     def initialize(self, initialConfigPath):             # <<<<<<<<<<<<<<
 *         """Initializes the Behavior using the specified config file.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppLoadableBehavior.initialize", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":859
 *         return self.behaviorPtr.initialize(initialConfigPath)
 * 
 *     def configure(self, configPath):             # <<<<<<<<<<<<<<
 *         """Configures the Behavior using the specified config file.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_5configure(PyObject *__pyx_v_self, PyObject *__pyx_v_configPath); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_4configure[] = "Configures the Behavior using the specified config file.\n\n        This method should be called after initialize().\n        It sets the runtime parameters of the Behavior and may be called\n        multiple times during execution.\n\n        The config file should be in yaml format.\n\n        Returns\n        -------\n        success : bool\n            Whether the configuration worked or not\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_5configure(PyObject *__pyx_v_self, PyObject *__pyx_v_configPath) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("configure (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_4configure(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_v_self), ((PyObject *)__pyx_v_configPath));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_4configure(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, PyObject *__pyx_v_configPath) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("configure", 0);

  /* "bolero/wrapper/_wrapper.pyx":873
 *             Whether the configuration worked or not
 *         """
 *         return self.behaviorPtr.configure(configPath)             # <<<<<<<<<<<<<<
 * 
 *     def configure_yaml(self, yaml_str):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_configPath); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 873, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_v_self->behaviorPtr->configure(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 873, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":859
 *         return self.behaviorPtr.initialize(initialConfigPath)
 * 
 *     def configure(self, configPath):             # <<<<<<<<<<<<<<
 *         """Configures the Behavior using the specified config file.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppLoadableBehavior.configure", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "bolero/wrapper/_wrapper.pyx":875
 *         return self.behaviorPtr.configure(configPath)
 * 
 *     def configure_yaml(self, yaml_str):             # <<<<<<<<<<<<<<
 *         """Configures the Behavior using the specified yaml string.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_7configure_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_yaml_str); /*proto*/
static char __pyx_doc_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_6configure_yaml[] = "Configures the Behavior using the specified yaml string.\n\n        This method should be called after initialize().\n        It sets the runtime parameters of the Behavior and may be called\n        multiple times during execution.\n\n        Returns\n        -------\n        success : bool\n            Whether the configuration worked or not\n        ";
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_7configure_yaml(PyObject *__pyx_v_self, PyObject *__pyx_v_yaml_str) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("configure_yaml (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_6configure_yaml(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_v_self), ((PyObject *)__pyx_v_yaml_str));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_6configure_yaml(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, PyObject *__pyx_v_yaml_str) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  bool __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_RefNannySetupContext("configure_yaml", 0);

  /* "bolero/wrapper/_wrapper.pyx":887
 *             Whether the configuration worked or not
 *         """
 *         return self.behaviorPtr.configureYaml(yaml_str)             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_string_from_py_std__in_string(__pyx_v_yaml_str); if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 887, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_v_self->behaviorPtr->configureYaml(__pyx_t_1);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(1, 887, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "bolero/wrapper/_wrapper.pyx":875
 *         return self.behaviorPtr.configure(configPath)
 * 
 *     def configure_yaml(self, yaml_str):             # <<<<<<<<<<<<<<
 *         """Configures the Behavior using the specified yaml string.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppLoadableBehavior.configure_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_8__reduce_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppLoadableBehavior.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_10__setstate_cython__(((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("bolero.wrapper._wrapper.CppLoadableBehavior.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":734
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":735
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":734
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":737
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":738
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":737
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":740
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":741
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":740
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":743
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":744
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":743
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":746
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":747
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":746
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":749
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":750
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":751
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":750
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":753
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":749
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":928
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":929
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":930
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":928
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":932
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":933
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":934
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":935
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":934
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":936
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":932
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":940
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":941
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":942
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 942, __pyx_L3_error)

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":941
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":943
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 943, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":944
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 944, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 944, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":941
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":940
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":946
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":947
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":948
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 948, __pyx_L3_error)

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":947
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":949
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 949, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":950
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 950, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 950, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":947
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":946
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":952
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":953
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":954
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 954, __pyx_L3_error)

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":953
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":955
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(2, 955, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":956
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef extern from *:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 956, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(2, 956, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":953
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":952
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":978
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":981
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_datetime64_object", 0);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":993
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":981
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":996
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1003
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":996
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1006
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1010
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1006
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1013
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1017
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":1013
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

static std::string __pyx_convert_string_from_py_std__in_string(PyObject *__pyx_v_o) {
  Py_ssize_t __pyx_v_length;
  char const *__pyx_v_data;
  std::string __pyx_r;
  __Pyx_RefNannyDeclarations
  char const *__pyx_t_1;
  __Pyx_RefNannySetupContext("__pyx_convert_string_from_py_std__in_string", 0);

  /* "string.from_py":14
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0             # <<<<<<<<<<<<<<
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)
 */
  __pyx_v_length = 0;

  /* "string.from_py":15
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)             # <<<<<<<<<<<<<<
 *     return string(data, length)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_AsStringAndSize(__pyx_v_o, (&__pyx_v_length)); if (unlikely(__pyx_t_1 == ((char const *)NULL))) __PYX_ERR(0, 15, __pyx_L1_error)
  __pyx_v_data = __pyx_t_1;

  /* "string.from_py":16
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 *     return string(data, length)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = std::string(__pyx_v_data, __pyx_v_length);
  goto __pyx_L0;

  /* "string.from_py":13
 * 
 * @cname("__pyx_convert_string_from_py_std__in_string")
 * cdef string __pyx_convert_string_from_py_std__in_string(object o) except *:             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t length = 0
 *     cdef const char* data = __Pyx_PyObject_AsStringAndSize(o, &length)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("string.from_py.__pyx_convert_string_from_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBLLoader(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBLLoader(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppBLLoader[] = {
  {"load_library", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_5load_library, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_4load_library},
  {"load_config_file", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_7load_config_file, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_6load_config_file},
  {"acquire_optimizer", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_9acquire_optimizer, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_8acquire_optimizer},
  {"acquire_behavior_search", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_11acquire_behavior_search, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_10acquire_behavior_search},
  {"acquire_environment", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_13acquire_environment, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_12acquire_environment},
  {"acquire_behavior", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_15acquire_behavior, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_14acquire_behavior},
  {"acquire_contextual_environment", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_17acquire_contextual_environment, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_16acquire_contextual_environment},
  {"acquire_parameterized_environment", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_19acquire_parameterized_environment, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_18acquire_parameterized_environment},
  {"release_library", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_21release_library, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBLLoader_20release_library},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_23__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBLLoader_25__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppBLLoader", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBLLoader), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBLLoader, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "Behavior learning loader.\n\n    This is the Python wrapper around the C++ library.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppBLLoader, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBLLoader, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppOptimizer(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)o);
  new((void*)&(p->config_yaml)) std::string();
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppOptimizer(PyObject *o) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *p = (struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->config_yaml);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppOptimizer[] = {
  {"initialize_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_3initialize_yaml, METH_O, 0},
  {"init", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_5init, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_4init},
  {"get_next_parameters", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_7get_next_parameters, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_6get_next_parameters},
  {"get_best_parameters", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_9get_best_parameters, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_8get_best_parameters},
  {"set_evaluation_feedback", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_11set_evaluation_feedback, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_10set_evaluation_feedback},
  {"is_behavior_learning_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_13is_behavior_learning_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_12is_behavior_learning_done},
  {"get_best_parameters", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_15get_best_parameters, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_12CppOptimizer_14get_best_parameters},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_17__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_12CppOptimizer_19__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppOptimizer", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppOptimizer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppOptimizer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppOptimizer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppOptimizer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehaviorSearch(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)o);
  new((void*)&(p->config_yaml)) std::string();
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBehaviorSearch(PyObject *o) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *p = (struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->config_yaml);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppBehaviorSearch[] = {
  {"initialize_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_3initialize_yaml, METH_O, 0},
  {"init", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_5init, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_4init},
  {"get_next_behavior", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_7get_next_behavior, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_6get_next_behavior},
  {"get_best_behavior", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_9get_best_behavior, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_8get_best_behavior},
  {"set_evaluation_feedback", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_11set_evaluation_feedback, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_10set_evaluation_feedback},
  {"write_results", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_13write_results, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_12write_results},
  {"get_behavior_from_results", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_15get_behavior_from_results, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_14get_behavior_from_results},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_17__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_17CppBehaviorSearch_19__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppBehaviorSearch", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehaviorSearch), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBehaviorSearch, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppBehaviorSearch, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehaviorSearch, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppEnvironment(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)o);
  new((void*)&(p->config_yaml)) std::string();
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppEnvironment(PyObject *o) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *p = (struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->config_yaml);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppEnvironment[] = {
  {"initialize_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_3initialize_yaml, METH_O, 0},
  {"init", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_5init, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_4init},
  {"reset", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_7reset, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_6reset},
  {"get_num_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_9get_num_inputs, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_8get_num_inputs},
  {"get_num_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_11get_num_outputs, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_10get_num_outputs},
  {"get_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_13get_outputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_12get_outputs},
  {"set_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_15set_inputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_14set_inputs},
  {"step_action", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_17step_action, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_16step_action},
  {"is_evaluation_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_19is_evaluation_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_18is_evaluation_done},
  {"get_feedback", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_21get_feedback, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_20get_feedback},
  {"is_behavior_learning_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_23is_behavior_learning_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_22is_behavior_learning_done},
  {"is_contextual", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_25is_contextual, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_14CppEnvironment_24is_contextual},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_27__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_14CppEnvironment_29__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppEnvironment", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppEnvironment), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppEnvironment, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppEnvironment, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppEnvironment, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppContextualEnvironment(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)o);
  new((void*)&(p->config_yaml)) std::string();
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppContextualEnvironment(PyObject *o) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *p = (struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_5__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  __Pyx_call_destructor(p->config_yaml);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppContextualEnvironment[] = {
  {"initialize_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_3initialize_yaml, METH_O, 0},
  {"init", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_7init, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_6init},
  {"reset", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_9reset, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_8reset},
  {"get_num_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_11get_num_inputs, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_10get_num_inputs},
  {"get_num_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_13get_num_outputs, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_12get_num_outputs},
  {"get_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_15get_outputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_14get_outputs},
  {"set_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_17set_inputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_16set_inputs},
  {"step_action", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_19step_action, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_18step_action},
  {"is_evaluation_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_21is_evaluation_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_20is_evaluation_done},
  {"get_feedback", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_23get_feedback, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_22get_feedback},
  {"is_behavior_learning_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_25is_behavior_learning_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_24is_behavior_learning_done},
  {"is_contextual", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_27is_contextual, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_26is_contextual},
  {"request_context", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_29request_context, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_28request_context},
  {"get_num_context_dims", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_31get_num_context_dims, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_30get_num_context_dims},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_33__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_24CppContextualEnvironment_35__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppContextualEnvironment", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppContextualEnvironment), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppContextualEnvironment, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppContextualEnvironment, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppContextualEnvironment, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_3__dealloc__(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment[] = {
  {"initialize_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_5initialize_yaml, METH_O, 0},
  {"init", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_7init, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_6init},
  {"reset", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_9reset, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_8reset},
  {"get_num_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_11get_num_inputs, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_10get_num_inputs},
  {"get_num_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_13get_num_outputs, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_12get_num_outputs},
  {"get_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_15get_outputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_14get_outputs},
  {"set_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_17set_inputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_16set_inputs},
  {"step_action", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_19step_action, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_18step_action},
  {"is_evaluation_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_21is_evaluation_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_20is_evaluation_done},
  {"get_feedback", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_23get_feedback, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_22get_feedback},
  {"is_behavior_learning_done", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_25is_behavior_learning_done, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_24is_behavior_learning_done},
  {"get_parameters", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_27get_parameters, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_26get_parameters},
  {"set_parameters", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_29set_parameters, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_28set_parameters},
  {"get_num_parameters", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_31get_num_parameters, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_30get_num_parameters},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_33__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_27CppParameterizedEnvironment_35__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppParameterizedEnvironment", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehavior(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)o);
  new((void*)&(p->config_yaml)) std::string();
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBehavior(PyObject *o) {
  struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *p = (struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->config_yaml);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppBehavior[] = {
  {"initialize_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_3initialize_yaml, METH_O, 0},
  {"init", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_5init, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_4init},
  {"set_meta_parameters", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_7set_meta_parameters, METH_VARARGS|METH_KEYWORDS, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_6set_meta_parameters},
  {"set_inputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_9set_inputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_8set_inputs},
  {"get_outputs", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_11get_outputs, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_10get_outputs},
  {"step", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_13step, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_12step},
  {"can_step", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_15can_step, METH_NOARGS, __pyx_doc_6bolero_7wrapper_8_wrapper_11CppBehavior_14can_step},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_17__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_11CppBehavior_19__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppBehavior", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppBehavior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBehavior, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppBehavior, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehavior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyObject *__pyx_tp_new_6bolero_7wrapper_8_wrapper_CppLoadableBehavior(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppBehavior(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_1__cinit__(o, __pyx_empty_tuple, NULL) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_6bolero_7wrapper_8_wrapper_CppLoadableBehavior[] = {
  {"initialize", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_3initialize, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_2initialize},
  {"configure", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_5configure, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_4configure},
  {"configure_yaml", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_7configure_yaml, METH_O, __pyx_doc_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_6configure_yaml},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_6bolero_7wrapper_8_wrapper_19CppLoadableBehavior_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior = {
  PyVarObject_HEAD_INIT(0, 0)
  "bolero.wrapper._wrapper.CppLoadableBehavior", /*tp_name*/
  sizeof(struct __pyx_obj_6bolero_7wrapper_8_wrapper_CppLoadableBehavior), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_6bolero_7wrapper_8_wrapper_CppBehavior, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_6bolero_7wrapper_8_wrapper_CppLoadableBehavior, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_6bolero_7wrapper_8_wrapper_CppLoadableBehavior, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec__wrapper(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec__wrapper},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "_wrapper",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_Behavior_search_does_not_impleme, __pyx_k_Behavior_search_does_not_impleme, sizeof(__pyx_k_Behavior_search_does_not_impleme), 0, 0, 1, 0},
  {&__pyx_kp_s_Cannot_obtain_best_parameters_fr, __pyx_k_Cannot_obtain_best_parameters_fr, sizeof(__pyx_k_Cannot_obtain_best_parameters_fr), 0, 0, 1, 0},
  {&__pyx_kp_s_Collected_more_than_1000_feedbac, __pyx_k_Collected_more_than_1000_feedbac, sizeof(__pyx_k_Collected_more_than_1000_feedbac), 0, 0, 1, 0},
  {&__pyx_n_s_CppBLLoader, __pyx_k_CppBLLoader, sizeof(__pyx_k_CppBLLoader), 0, 0, 1, 1},
  {&__pyx_n_s_CppBehavior, __pyx_k_CppBehavior, sizeof(__pyx_k_CppBehavior), 0, 0, 1, 1},
  {&__pyx_n_s_CppBehaviorSearch, __pyx_k_CppBehaviorSearch, sizeof(__pyx_k_CppBehaviorSearch), 0, 0, 1, 1},
  {&__pyx_n_s_CppContextualEnvironment, __pyx_k_CppContextualEnvironment, sizeof(__pyx_k_CppContextualEnvironment), 0, 0, 1, 1},
  {&__pyx_n_s_CppEnvironment, __pyx_k_CppEnvironment, sizeof(__pyx_k_CppEnvironment), 0, 0, 1, 1},
  {&__pyx_n_s_CppLoadableBehavior, __pyx_k_CppLoadableBehavior, sizeof(__pyx_k_CppLoadableBehavior), 0, 0, 1, 1},
  {&__pyx_n_s_CppOptimizer, __pyx_k_CppOptimizer, sizeof(__pyx_k_CppOptimizer), 0, 0, 1, 1},
  {&__pyx_n_s_CppParameterizedEnvironment, __pyx_k_CppParameterizedEnvironment, sizeof(__pyx_k_CppParameterizedEnvironment), 0, 0, 1, 1},
  {&__pyx_n_s_HideExtern, __pyx_k_HideExtern, sizeof(__pyx_k_HideExtern), 0, 0, 1, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_s_Meta_parameters_are_not_availabl, __pyx_k_Meta_parameters_are_not_availabl, sizeof(__pyx_k_Meta_parameters_are_not_availabl), 0, 0, 1, 0},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_b__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 0, 0},
  {&__pyx_kp_s__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 0, 1, 0},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_config_yaml, __pyx_k_config_yaml, sizeof(__pyx_k_config_yaml), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_enter, __pyx_k_enter, sizeof(__pyx_k_enter), 0, 0, 1, 1},
  {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
  {&__pyx_n_s_get_num_context_dims, __pyx_k_get_num_context_dims, sizeof(__pyx_k_get_num_context_dims), 0, 0, 1, 1},
  {&__pyx_n_s_get_num_inputs, __pyx_k_get_num_inputs, sizeof(__pyx_k_get_num_inputs), 0, 0, 1, 1},
  {&__pyx_n_s_get_num_outputs, __pyx_k_get_num_outputs, sizeof(__pyx_k_get_num_outputs), 0, 0, 1, 1},
  {&__pyx_n_s_get_num_parameters, __pyx_k_get_num_parameters, sizeof(__pyx_k_get_num_parameters), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_meta_parameters, __pyx_k_meta_parameters, sizeof(__pyx_k_meta_parameters), 0, 0, 1, 1},
  {&__pyx_n_s_n_inputs, __pyx_k_n_inputs, sizeof(__pyx_k_n_inputs), 0, 0, 1, 1},
  {&__pyx_n_s_n_outputs, __pyx_k_n_outputs, sizeof(__pyx_k_n_outputs), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_num_inputs, __pyx_k_num_inputs, sizeof(__pyx_k_num_inputs), 0, 0, 1, 1},
  {&__pyx_n_s_num_outputs, __pyx_k_num_outputs, sizeof(__pyx_k_num_outputs), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_s_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 0, 1, 0},
  {&__pyx_kp_s_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 0, 1, 0},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_s_stderr, __pyx_k_stderr, sizeof(__pyx_k_stderr), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_kp_s_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
  {&__pyx_n_s_utils_log, __pyx_k_utils_log, sizeof(__pyx_k_utils_log), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 2, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(1, 250, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(1, 432, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(1, 594, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(2, 944, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "bolero/wrapper/_wrapper.pyx":28
 * 
 *     def __cinit__(self):
 *         with HideExtern("stderr"):             # <<<<<<<<<<<<<<
 *             self.thisptr = new BLLoader()
 * 
 */
  __pyx_tuple_ = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple_)) __PYX_ERR(1, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "bolero/wrapper/_wrapper.pyx":203
 *         cdef np.ndarray[double, ndim=1, mode="c"] params_array = np.ndarray(*p.shape)
 *         self.thisptr.getNextParameters(&params_array[0], params_array.shape[0])
 *         p[:] = params_array             # <<<<<<<<<<<<<<
 * 
 *     def get_best_parameters(self, p):
 */
  __pyx_slice__5 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__5)) __PYX_ERR(1, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__5);
  __Pyx_GIVEREF(__pyx_slice__5);

  /* "bolero/wrapper/_wrapper.pyx":250
 *         """
 *         # TODO add this function to C++ interface
 *         raise NotImplementedError("Cannot obtain best parameters from C++ optimizer!")             # <<<<<<<<<<<<<<
 * 
 * cdef class CppBehaviorSearch:
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_s_Cannot_obtain_best_parameters_fr); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(1, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "bolero/wrapper/_wrapper.pyx":298
 *         behavior.thisptr = self.thisptr.getBestBehavior()
 *         if behavior.thisptr == NULL:
 *             raise NotImplementedError("Behavior search does not implement "             # <<<<<<<<<<<<<<
 *                                       "getBestBehavior()")
 *         return behavior
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_Behavior_search_does_not_impleme); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(1, 298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "bolero/wrapper/_wrapper.pyx":429
 *             Feedback values
 *         """
 *         cdef np.ndarray[double, ndim=1, mode="c"] feedback = np.ndarray(1000)             # <<<<<<<<<<<<<<
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_int_1000); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(1, 429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "bolero/wrapper/_wrapper.pyx":432
 *         n_feedbacks = self.thisptr.getFeedback(&feedback[0])
 *         if n_feedbacks > 1000:
 *             raise ValueError("Collected more than 1000 feedbacks, fix the "             # <<<<<<<<<<<<<<
 *                              "wrapper code")
 *         return feedback[:n_feedbacks]
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_s_Collected_more_than_1000_feedbac); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(1, 432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__14 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "bolero/wrapper/_wrapper.pyx":795
 *             values of meta-parameters
 *         """
 *         raise NotImplementedError("Meta parameters are not available in C++ behavior!")             # <<<<<<<<<<<<<<
 * 
 *     def set_inputs(self, values):
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_s_Meta_parameters_are_not_availabl); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(1, 795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":944
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__25 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(2, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "../../install/pip/lib/python3.8/site-packages/numpy/__init__.pxd":950
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_s_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(2, 950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  __pyx_umethod_PyString_Type_encode.type = (PyObject*)&PyString_Type;
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_int_1000 = PyInt_FromLong(1000); if (unlikely(!__pyx_int_1000)) __PYX_ERR(1, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader) < 0) __PYX_ERR(1, 20, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppBLLoader, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader) < 0) __PYX_ERR(1, 20, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader) < 0) __PYX_ERR(1, 20, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppBLLoader = &__pyx_type_6bolero_7wrapper_8_wrapper_CppBLLoader;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer) < 0) __PYX_ERR(1, 171, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppOptimizer, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer) < 0) __PYX_ERR(1, 171, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer) < 0) __PYX_ERR(1, 171, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppOptimizer = &__pyx_type_6bolero_7wrapper_8_wrapper_CppOptimizer;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch) < 0) __PYX_ERR(1, 252, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppBehaviorSearch, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch) < 0) __PYX_ERR(1, 252, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch) < 0) __PYX_ERR(1, 252, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehaviorSearch = &__pyx_type_6bolero_7wrapper_8_wrapper_CppBehaviorSearch;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment) < 0) __PYX_ERR(1, 340, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppEnvironment, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment) < 0) __PYX_ERR(1, 340, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment) < 0) __PYX_ERR(1, 340, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppEnvironment = &__pyx_type_6bolero_7wrapper_8_wrapper_CppEnvironment;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment) < 0) __PYX_ERR(1, 457, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppContextualEnvironment, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment) < 0) __PYX_ERR(1, 457, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment) < 0) __PYX_ERR(1, 457, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppContextualEnvironment = &__pyx_type_6bolero_7wrapper_8_wrapper_CppContextualEnvironment;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment) < 0) __PYX_ERR(1, 608, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppParameterizedEnvironment, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment) < 0) __PYX_ERR(1, 608, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment) < 0) __PYX_ERR(1, 608, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment = &__pyx_type_6bolero_7wrapper_8_wrapper_CppParameterizedEnvironment;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior) < 0) __PYX_ERR(1, 759, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppBehavior, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior) < 0) __PYX_ERR(1, 759, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior) < 0) __PYX_ERR(1, 759, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehavior = &__pyx_type_6bolero_7wrapper_8_wrapper_CppBehavior;
  __pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior.tp_base = __pyx_ptype_6bolero_7wrapper_8_wrapper_CppBehavior;
  if (PyType_Ready(&__pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior) < 0) __PYX_ERR(1, 838, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior.tp_dictoffset && __pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CppLoadableBehavior, (PyObject *)&__pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior) < 0) __PYX_ERR(1, 838, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior) < 0) __PYX_ERR(1, 838, __pyx_L1_error)
  __pyx_ptype_6bolero_7wrapper_8_wrapper_CppLoadableBehavior = &__pyx_type_6bolero_7wrapper_8_wrapper_CppLoadableBehavior;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(3, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4bool_bool) __PYX_ERR(4, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_7complex_complex) __PYX_ERR(5, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(2, 199, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(2, 222, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(2, 226, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(2, 238, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_generic) __PYX_ERR(2, 770, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType(__pyx_t_1, "numpy", "number", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_number) __PYX_ERR(2, 772, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_integer) __PYX_ERR(2, 774, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(2, 776, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(2, 778, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(2, 780, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_floating) __PYX_ERR(2, 782, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(2, 784, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(2, 786, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType(__pyx_t_1, "numpy", "character", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_character) __PYX_ERR(2, 788, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(2, 826, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION < 3
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC void
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#else
#ifdef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC init_wrapper(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC init_wrapper(void)
#else
__Pyx_PyMODINIT_FUNC PyInit__wrapper(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit__wrapper(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec__wrapper(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module '_wrapper' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit__wrapper(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(1, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(1, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_wrapper", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(1, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(1, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_bolero__wrapper___wrapper) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(1, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "bolero.wrapper._wrapper")) {
      if (unlikely(PyDict_SetItemString(modules, "bolero.wrapper._wrapper", __pyx_m) < 0)) __PYX_ERR(1, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) goto __pyx_L1_error;
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) goto __pyx_L1_error;
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() != 0)) goto __pyx_L1_error;
  if (unlikely(__Pyx_modinit_type_import_code() != 0)) goto __pyx_L1_error;
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  #endif

  /* "bolero/wrapper/_wrapper.pyx":4
 * 
 * cimport numpy as np
 * import numpy as np             # <<<<<<<<<<<<<<
 * from libcpp.string cimport string
 * cimport _wrapper
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, -1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "bolero/wrapper/_wrapper.pyx":7
 * from libcpp.string cimport string
 * cimport _wrapper
 * from ..utils.log import HideExtern             # <<<<<<<<<<<<<<
 * from cpython cimport version
 * 
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_HideExtern);
  __Pyx_GIVEREF(__pyx_n_s_HideExtern);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_HideExtern);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_utils_log, __pyx_t_1, 2); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_HideExtern); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HideExtern, __pyx_t_1) < 0) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "bolero/wrapper/_wrapper.pyx":1
 * # distutils: language=c++             # <<<<<<<<<<<<<<
 * 
 * cimport numpy as np
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init bolero.wrapper._wrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init bolero.wrapper._wrapper");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = func->ob_type->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* UnpackUnboundCMethod */
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    }
#endif
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if (PY_VERSION_HEX >= 0x030600B1 && flag == METH_FASTCALL) {
            if (PY_VERSION_HEX >= 0x030700A0) {
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            } else {
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            }
        } else if (PY_VERSION_HEX >= 0x030700A0 && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (PyCFunction_GET_FLAGS(func) & METH_FASTCALL) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_FALSE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* IsLittleEndian */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t <= '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case '?': return "'bool'";
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case '?': case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number;
    int ndim = ctx->head->field->type->ndim;
;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
        CYTHON_FALLTHROUGH;
      case '?': case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex &&
            ctx->enc_packmode == ctx->new_packmode) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
        CYTHON_FALLTHROUGH;
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}

/* BufferGetAndValidate */
  static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (unlikely(info->buf == NULL)) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static int __Pyx__GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  buf->buf = NULL;
  if (unlikely(__Pyx_GetBuffer(obj, buf, flags) == -1)) {
    __Pyx_ZeroBuffer(buf);
    return -1;
  }
  if (unlikely(buf->ndim != nd)) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if (unlikely((size_t)buf->itemsize != dtype->size)) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_SafeReleaseBuffer(buf);
  return -1;
}

/* BufferIndexError */
  static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}

/* SliceObject */
  static CYTHON_INLINE int __Pyx_PyObject_SetSlice(PyObject* obj, PyObject* value,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_ass_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_ass_slice(obj, cstart, cstop, value);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_ass_subscript))
#endif
    {
        int result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_ass_subscript(obj, py_slice, value);
#else
        result = value ? PyObject_SetItem(obj, py_slice, value) : PyObject_DelItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object does not support slice %.10s",
        Py_TYPE(obj)->tp_name, value ? "assignment" : "deletion");
bad:
    return -1;
}

/* RaiseDoubleKeywords */
  static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
  static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* GetItemInt */
  static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
  #if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* PyObjectSetAttrStr */
  #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* SetItemInt */
  static int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v, int is_list,
                                               CYTHON_NCP_UNUSED int wraparound, CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = (!wraparound) ? i : ((likely(i >= 0)) ? i : i + PyList_GET_SIZE(o));
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o)))) {
            PyObject* old = PyList_GET_ITEM(o, n);
            Py_INCREF(v);
            PyList_SET_ITEM(o, n, v);
            Py_DECREF(old);
            return 1;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_ass_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return -1;
                    PyErr_Clear();
                }
            }
            return m->sq_ass_item(o, i, v);
        }
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (is_list || (PySequence_Check(o) && !PyDict_Check(o)))
#else
    if (is_list || PySequence_Check(o))
#endif
    {
        return PySequence_SetItem(o, i, v);
    }
#endif
    return __Pyx_SetItemInt_Generic(o, PyInt_FromSsize_t(i), v);
}

/* PyErrExceptionMatches */
  #if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* PyObject_GenericGetAttrNoDict */
  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetupReduce */
  static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    if (_PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate)) goto GOOD;
#else
    if (PyObject_HasAttr(type_obj, __pyx_n_s_getstate)) goto GOOD;
#endif
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_cython); if (unlikely(!reduce_cython)) goto BAD;
            ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto BAD;
            ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto BAD;
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate_cython); if (unlikely(!setstate_cython)) goto BAD;
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto BAD;
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto GOOD;
BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* TypeImport */
  #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* Import */
  static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
  static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* CLineInTraceback */
  #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
  static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, (size_t)new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
  #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


  /* CIntFromPyVerify */
  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
  #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPy */
  static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
    const int neg_one = (int) ((int) 0 - (int) 1), const_zero = (int) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
  static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
    const long neg_one = (long) ((long) 0 - (long) 1), const_zero = (long) 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FastTypeChecks */
  #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
  static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
  static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
